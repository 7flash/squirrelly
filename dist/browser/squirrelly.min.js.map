{"version":3,"file":"squirrelly.min.js","sources":["../../src/err.ts","../../src/utils.ts","../../src/parse.ts","../../src/compile-string.ts","../../src/storage.ts","../../src/containers.ts","../../src/config.ts","../../src/compile.ts","../../src/render.ts"],"sourcesContent":["function setPrototypeOf (obj: any, proto: any) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\nexport default function SqrlErr (message: string): Error {\n  var err = new Error(message)\n  setPrototypeOf(err, SqrlErr.prototype)\n  return err\n}\n\nSqrlErr.prototype = Object.create(Error.prototype, {\n  name: { value: 'Squirrelly Error', enumerable: false }\n})\n\n// TODO: Class transpilation adds a lot to the bundle size\n\nexport function ParseErr (message: string, str: string, indx: number) {\n  var whitespace = str.slice(0, indx).split(/\\n/)\n\n  var lineNo = whitespace.length\n  var colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    ' at line ' +\n    lineNo +\n    ' col ' +\n    colNo +\n    ':\\n\\n' +\n    '  ' +\n    str.split(/\\n/)[lineNo - 1] +\n    '\\n' +\n    '  ' +\n    Array(colNo).join(' ') +\n    '^'\n  throw SqrlErr(message)\n}\n","// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\n/* END TYPES */\n\nexport var promiseImpl = new Function('return this')().Promise\n\nvar asyncFunc: FunctionConstructor | false = false\n\ntry {\n  asyncFunc = new Function('return (async function(){}).constructor')()\n} catch (e) {\n  // We shouldn't actually ever have any other errors, but...\n  if (!(e instanceof SyntaxError)) {\n    throw e\n  }\n}\n\nexport { asyncFunc }\n\nexport function hasOwnProp(obj: object, prop: string) {\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n}\n\nexport function copyProps<T>(toObj: T, fromObj: T, notConfig?: boolean) {\n  for (var key in fromObj) {\n    if (hasOwnProp((fromObj as unknown) as object, key)) {\n      if (\n        fromObj[key] != null &&\n        typeof fromObj[key] == 'object' &&\n        (key === 'storage' || key === 'prefixes') &&\n        !notConfig // not called from Cache.load\n      ) {\n        // plugins or storage\n        // Note: this doesn't merge from initial config!\n        // Deep clone instead of assigning\n        // TODO: run checks on this\n        toObj[key] = copyProps(/*toObj[key] ||*/ {} as T[Extract<keyof T, string>], fromObj[key])\n      } else {\n        toObj[key] = fromObj[key]\n      }\n    }\n  }\n  return toObj\n}\n\nfunction trimWS(\n  str: string,\n  env: SqrlConfig,\n  wsLeft: string | false,\n  wsRight?: string | false\n): string {\n  var leftTrim\n  var rightTrim\n\n  if (typeof env.autoTrim === 'string') {\n    leftTrim = rightTrim = env.autoTrim\n    // Don't need to check if env.autoTrim is false\n    // Because leftTrim, rightTrim are initialized as falsy\n  } else if (Array.isArray(env.autoTrim)) {\n    // kinda confusing\n    // but _}} will trim the left side of the following string\n    leftTrim = env.autoTrim[1]\n    rightTrim = env.autoTrim[0]\n  }\n\n  if (wsLeft || wsLeft === false) {\n    leftTrim = wsLeft\n  }\n\n  if (wsRight || wsRight === false) {\n    rightTrim = wsRight\n  }\n\n  if (leftTrim === 'slurp' && rightTrim === 'slurp') {\n    return str.trim()\n  }\n\n  if (leftTrim === '_' || leftTrim === 'slurp') {\n    // console.log('trimming left' + leftTrim)\n    // full slurp\n    if (String.prototype.trimLeft) {\n      str = str.trimLeft()\n    } else {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+/, '')\n    }\n  } else if (leftTrim === '-' || leftTrim === 'nl') {\n    // console.log('trimming left nl' + leftTrim)\n    // nl trim\n    str = str.replace(/^(?:\\n|\\r|\\r\\n)/, '')\n  }\n\n  if (rightTrim === '_' || rightTrim === 'slurp') {\n    // console.log('trimming right' + rightTrim)\n    // full slurp\n    if (String.prototype.trimRight) {\n      str = str.trimRight()\n    } else {\n      str = str.replace(/[\\s\\uFEFF\\xA0]+$/, '')\n    }\n  } else if (rightTrim === '-' || rightTrim === 'nl') {\n    // console.log('trimming right nl' + rightTrim)\n    // nl trim\n    str = str.replace(/(?:\\n|\\r|\\r\\n)$/, '') // TODO: make sure this gets \\r\\n\n  }\n\n  return str\n}\n\nexport { trimWS }\n","import SqrlErr, { ParseErr } from './err'\nimport { trimWS } from './utils'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\nexport type TagType = 'h' | 'b' | 'i' | 'r' | 'c' | 'e' | 'q' | 's'\n// TODO: change to anagram \"QBIRCHES\"\nexport type TemplateAttribute = 'c' | 'f' | 'fp' | 'p' | 'n' | 'res' | 'err'\nexport type TemplateObjectAttribute = 'c' | 'p' | 'n' | 'res'\n\nexport type AstObject = string | TemplateObject\n\nexport type Filter = [string, string] | [string, string, true]\n// [name, params, async]\nexport interface TemplateObject {\n  n?: string\n  t?: string\n  f: Array<Filter>\n  c?: string\n  p?: string\n  res?: string\n  d?: Array<AstObject>\n  raw?: boolean\n  a?: boolean // async\n  b?: Array<ParentTemplateObject>\n}\n\nexport interface ParentTemplateObject extends TemplateObject {\n  d: Array<AstObject>\n  b: Array<ParentTemplateObject>\n}\n\n/* END TYPES */\n\nvar asyncRegExp = /^async +/\n\nvar templateLitReg = /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\\${)[^\\\\`])*`/g\n\nvar singleQuoteReg = /'(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r'\\\\])*?'/g\n\nvar doubleQuoteReg = /\"(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r\"\\\\])*?\"/g\n\nexport default function parse(str: string, env: SqrlConfig): Array<AstObject> {\n  /* Adding for EJS compatibility */\n  if (env.rmWhitespace) {\n    // Code taken directly from EJS\n    // Have to use two separate replaces here as `^` and `$` operators don't\n    // work well with `\\r` and empty lines don't work well with the `m` flag.\n    // Essentially, this replaces the whitespace at the beginning and end of\n    // each line and removes multiple newlines.\n    str = str.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '')\n  }\n  /* End rmWhitespace option */\n\n  templateLitReg.lastIndex = 0\n  singleQuoteReg.lastIndex = 0\n  doubleQuoteReg.lastIndex = 0\n\n  var envPrefixes = env.prefixes\n\n  var prefixes = (\n    envPrefixes.h +\n    envPrefixes.b +\n    envPrefixes.i +\n    envPrefixes.r +\n    envPrefixes.c +\n    envPrefixes.e +\n    envPrefixes.q\n  )\n    .replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&') // as seen on MDN\n    .split('')\n    .join('|')\n\n  var parseCloseReg = new RegExp(\n    '([|()]|=>)|' + // powerchars\n    '\\'|\"|`|\\\\/\\\\*|\\\\s*((\\\\/)?(-|_)?' + // comments, strings\n      env.tags[1] +\n      ')',\n    'g'\n  )\n\n  var tagOpenReg = new RegExp('([^]*?)' + env.tags[0] + '(-|_)?\\\\s*(' + prefixes + ')?\\\\s*', 'g')\n  var startInd = 0\n  var trimNextLeftWs: string | false = false\n\n  function parseTag(tagOpenIndex: number, currentType: TagType): TemplateObject {\n    var currentObj: TemplateObject = { f: [] }\n    var numParens = 0\n    var currentAttribute: TemplateAttribute = 'c' // default - Valid values: 'c'=content, 'f'=filter, 'fp'=filter params, 'p'=param, 'n'=name\n\n    if (currentType === 'h' || currentType === 'b' || currentType === 'c') {\n      currentAttribute = 'n'\n    } else if (currentType === 'r') {\n      currentObj.raw = true\n      currentType = 'i'\n    }\n\n    function addAttrValue(indx: number) {\n      var valUnprocessed = str.slice(startInd, indx)\n      // console.log(valUnprocessed)\n      var val = valUnprocessed.trim()\n      if (currentAttribute === 'f') {\n        if (val === 'safe') {\n          currentObj.raw = true\n        } else {\n          if (env.async && asyncRegExp.test(val)) {\n            val = val.replace(asyncRegExp, '')\n            currentObj.f.push([val, '', true])\n          } else {\n            currentObj.f.push([val, ''])\n          }\n        }\n      } else if (currentAttribute === 'fp') {\n        currentObj.f[currentObj.f.length - 1][1] += val\n      } else if (currentAttribute === 'err') {\n        if (val) {\n          var found = valUnprocessed.search(/\\S/)\n          ParseErr('invalid syntax', str, startInd + found)\n        }\n      } else {\n        // if (currentObj[currentAttribute]) { // TODO make sure no errs\n        //   currentObj[currentAttribute] += val\n        // } else {\n        currentObj[currentAttribute] = val\n        // }\n      }\n      startInd = indx + 1\n    }\n\n    parseCloseReg.lastIndex = startInd\n\n    var m\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = parseCloseReg.exec(str)) !== null) {\n      var char = m[1]\n      var tagClose = m[2]\n      var slash = m[3]\n      var wsControl = m[4]\n      var i = m.index\n\n      if (char) {\n        // Power character\n        if (char === '(') {\n          if (numParens === 0) {\n            if (currentAttribute === 'n') {\n              addAttrValue(i)\n              currentAttribute = 'p'\n            } else if (currentAttribute === 'f') {\n              addAttrValue(i)\n              currentAttribute = 'fp'\n            }\n          }\n          numParens++\n        } else if (char === ')') {\n          numParens--\n          if (numParens === 0 && currentAttribute !== 'c') {\n            // Then it's closing a filter, block, or helper\n            addAttrValue(i)\n\n            currentAttribute = 'err' // Reset the current attribute\n          }\n        } else if (numParens === 0 && char === '|') {\n          addAttrValue(i) // this should actually always be whitespace or empty\n          currentAttribute = 'f'\n        } else if (char === '=>') {\n          addAttrValue(i)\n          startInd += 1 // this is 2 chars\n          currentAttribute = 'res'\n        }\n      } else if (tagClose) {\n        addAttrValue(i)\n        startInd = i + m[0].length\n        tagOpenReg.lastIndex = startInd\n        // console.log('tagClose: ' + startInd)\n        trimNextLeftWs = wsControl\n        if (slash && currentType === 'h') {\n          currentType = 's'\n        } // TODO throw err\n        currentObj.t = currentType\n        return currentObj\n      } else {\n        var punctuator = m[0]\n        if (punctuator === '/*') {\n          var commentCloseInd = str.indexOf('*/', parseCloseReg.lastIndex)\n\n          if (commentCloseInd === -1) {\n            ParseErr('unclosed comment', str, m.index)\n          }\n          parseCloseReg.lastIndex = commentCloseInd\n        } else if (punctuator === \"'\") {\n          singleQuoteReg.lastIndex = m.index\n\n          var singleQuoteMatch = singleQuoteReg.exec(str)\n          if (singleQuoteMatch) {\n            parseCloseReg.lastIndex = singleQuoteReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, m.index)\n          }\n        } else if (punctuator === '\"') {\n          doubleQuoteReg.lastIndex = m.index\n          var doubleQuoteMatch = doubleQuoteReg.exec(str)\n\n          if (doubleQuoteMatch) {\n            parseCloseReg.lastIndex = doubleQuoteReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, m.index)\n          }\n        } else if (punctuator === '`') {\n          templateLitReg.lastIndex = m.index\n          var templateLitMatch = templateLitReg.exec(str)\n          if (templateLitMatch) {\n            parseCloseReg.lastIndex = templateLitReg.lastIndex\n          } else {\n            ParseErr('unclosed string', str, m.index)\n          }\n        }\n      }\n    }\n    ParseErr('unclosed tag', str, tagOpenIndex)\n    return currentObj // To prevent TypeScript from erroring\n  }\n\n  function parseContext(parentObj: TemplateObject, firstParse?: boolean): ParentTemplateObject {\n    parentObj.b = [] // assume there will be blocks // TODO: perf optimize this\n    parentObj.d = []\n    var lastBlock: ParentTemplateObject | false = false\n    var buffer: Array<AstObject> = []\n\n    function pushString(strng: string, shouldTrimRightOfString?: string | false) {\n      if (strng) {\n        // if string is truthy it must be of type 'string'\n\n        // TODO: benchmark replace( /(\\\\|')/g, '\\\\$1')\n        strng = trimWS(\n          strng,\n          env,\n          trimNextLeftWs, // this will only be false on the first str, the next ones will be null or undefined\n          shouldTrimRightOfString\n        )\n\n        if (strng) {\n          // replace \\ with \\\\, ' with \\'\n\n          strng = strng.replace(/\\\\|'/g, '\\\\$&').replace(/\\r\\n|\\n|\\r/g, '\\\\n')\n          // we're going to convert all CRLF to LF so it doesn't take more than one replace\n\n          buffer.push(strng)\n        }\n      }\n    }\n\n    // Random TODO: parentObj.b doesn't need to have t: #\n    var tagOpenMatch\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((tagOpenMatch = tagOpenReg.exec(str)) !== null) {\n      var precedingString = tagOpenMatch[1]\n      var shouldTrimRightPrecedingString = tagOpenMatch[2]\n      var prefix = tagOpenMatch[3]\n      var prefixType: TagType | undefined\n\n      for (var key in envPrefixes) {\n        if (envPrefixes[key] === prefix) {\n          prefixType = key as TagType\n          break\n        }\n      }\n\n      pushString(precedingString, shouldTrimRightPrecedingString)\n      startInd = tagOpenMatch.index + tagOpenMatch[0].length\n\n      if (!prefixType) {\n        ParseErr('unrecognized tag type', str, startInd)\n      }\n\n      var currentObj = parseTag(tagOpenMatch.index, prefixType as TagType)\n      // ===== NOW ADD THE OBJECT TO OUR BUFFER =====\n\n      var currentType = currentObj.t\n      if (currentType === '@') {\n        var hName = currentObj.n || ''\n        if (env.async && asyncRegExp.test(hName)) {\n          currentObj.a = true\n          currentObj.n = hName.replace(asyncRegExp, '')\n        }\n        currentObj = parseContext(currentObj) // currentObj is the parent object\n        buffer.push(currentObj)\n      } else if (currentType === '/') {\n        if (parentObj.n === currentObj.n) {\n          if (lastBlock) {\n            // If there's a previous block\n            lastBlock.d = buffer\n            parentObj.b.push(lastBlock)\n          } else {\n            parentObj.d = buffer\n          }\n          // console.log('parentObj: ' + JSON.stringify(parentObj))\n          return parentObj as ParentTemplateObject\n        } else {\n          ParseErr(\n            \"Helper start and end don't match\",\n            str,\n            tagOpenMatch.index + tagOpenMatch[0].length\n          )\n        }\n      } else if (currentType === '#') {\n        // TODO: make sure async stuff inside blocks are recognized\n        if (lastBlock) {\n          // If there's a previous block\n          lastBlock.d = buffer\n          parentObj.b.push(lastBlock)\n        } else {\n          parentObj.d = buffer\n        }\n\n        var blockName = currentObj.n || ''\n        if (env.async && asyncRegExp.test(blockName)) {\n          currentObj.a = true\n          currentObj.n = blockName.replace(asyncRegExp, '')\n        }\n\n        lastBlock = currentObj as ParentTemplateObject // Set the 'lastBlock' object to the value of the current block\n\n        buffer = []\n      } else if (currentType === 's') {\n        var selfClosingHName = currentObj.n || ''\n        if (env.async && asyncRegExp.test(selfClosingHName)) {\n          currentObj.a = true\n          currentObj.n = selfClosingHName.replace(asyncRegExp, '')\n        }\n        buffer.push(currentObj)\n      } else {\n        buffer.push(currentObj)\n      }\n      // ===== DONE ADDING OBJECT TO BUFFER =====\n    }\n\n    if (firstParse) {\n      pushString(str.slice(startInd, str.length), false)\n      parentObj.d = buffer\n    } else {\n      throw SqrlErr('unclosed helper \"' + parentObj.n + '\"')\n      // It should have returned by now\n    }\n\n    return parentObj as ParentTemplateObject\n  }\n\n  var parseResult = parseContext({ f: [] }, true)\n  // console.log(JSON.stringify(parseResult))\n  if (env.plugins) {\n    for (var i = 0; i < env.plugins.length; i++) {\n      var plugin = env.plugins[i]\n      if (plugin.processAST) {\n        parseResult.d = plugin.processAST(parseResult.d, env)\n      }\n    }\n  }\n  return parseResult.d // Parse the very outside context\n}\n","import Parse from './parse'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { AstObject, Filter, ParentTemplateObject } from './parse'\ntype ParsedTagType = 'h' | 's' | 'e' | 'q' | 'i'\n// import SqrlErr from './err'\n\n/* END TYPES */\n\nexport default function compileToString(str: string, env: SqrlConfig) {\n  var buffer: Array<AstObject> = Parse(str, env)\n\n  var res =\n    \"var tR='';\" +\n    (env.useWith ? 'with(' + env.varName + '||{}){' : '') +\n    compileScope(buffer, env) +\n    'if(cb){cb(null,tR)} return tR' +\n    (env.useWith ? '}' : '')\n\n  if (env.plugins) {\n    for (var i = 0; i < env.plugins.length; i++) {\n      var plugin = env.plugins[i]\n      if (plugin.processFnString) {\n        res = plugin.processFnString(res, env)\n      }\n    }\n  }\n\n  return res\n\n  // TODO: is `return cb()` necessary, or could we just do `cb()`\n}\n\nfunction filter(str: string, filters: Array<Filter>) {\n  for (var i = 0; i < filters.length; i++) {\n    var name = filters[i][0]\n    var params = filters[i][1]\n    var isFilterAsync = filters[i][2]\n\n    // if (isFilterAsync && !env.async) {\n    //   throw SqrlErr(\"Async filter '\" + name + \"' in non-async env\")\n    // }\n    // Let the JS compiler do this, compile() will catch it\n\n    str = (isFilterAsync ? 'await ' : '') + \"c.l('F','\" + name + \"')(\" + str\n    if (params) {\n      str += ',' + params\n    }\n    str += ')'\n  }\n  return str\n}\n\n// TODO: Use type intersections for TemplateObject, etc.\n// so I don't have to make properties mandatory\n\nfunction compileHelper(\n  env: SqrlConfig,\n  res: string,\n  descendants: Array<AstObject>,\n  params: string,\n  isAsync?: boolean,\n  name?: string\n) {\n  var ret =\n    '{exec:' +\n    (isAsync ? 'async ' : '') +\n    compileScopeIntoFunction(descendants, res, env) +\n    ',params:[' +\n    params +\n    ']'\n  if (name) {\n    ret += \",name:'\" + name + \"'\"\n  }\n  if (isAsync) {\n    ret += ',async:true'\n  }\n  ret += '}'\n  return ret\n}\n\nfunction compileBlocks(blocks: Array<ParentTemplateObject>, env: SqrlConfig) {\n  var ret = '['\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i]\n    ret += compileHelper(env, block.res || '', block.d, block.p || '', block.a, block.n)\n    if (i < blocks.length) {\n      ret += ','\n    }\n  }\n  ret += ']'\n  return ret\n}\n\nexport function compileScopeIntoFunction(buff: Array<AstObject>, res: string, env: SqrlConfig) {\n  return 'function(' + res + \"){var tR='';\" + compileScope(buff, env) + 'return tR}'\n}\n\nexport function compileScope(buff: Array<AstObject>, env: SqrlConfig) {\n  var i = 0\n  var buffLength = buff.length\n  var returnStr = ''\n\n  for (i; i < buffLength; i++) {\n    var currentBlock = buff[i]\n    if (typeof currentBlock === 'string') {\n      var str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str + \"';\"\n    } else {\n      var type: ParsedTagType = currentBlock.t as ParsedTagType // h, s, e, q, i\n      var content = currentBlock.c || ''\n      var filters = currentBlock.f\n      var name = currentBlock.n || ''\n      var params = currentBlock.p || ''\n      var res = currentBlock.res || ''\n      var blocks = currentBlock.b\n      var isAsync = !!currentBlock.a // !! is to booleanize it\n      // if (isAsync && !env.async) {\n      //   throw SqrlErr(\"Async block or helper '\" + name + \"' in non-async env\")\n      // }\n      // Let compiler do this\n      if (type === 'i') {\n        if (env.defaultFilter) {\n          content = \"c.l('F','\" + env.defaultFilter + \"')(\" + content + ')'\n        }\n        if (!currentBlock.raw && env.autoEscape) {\n          content = \"c.l('F','e')(\" + content + ')'\n        }\n        var filtered = filter(content, filters)\n        returnStr += 'tR+=' + filtered + ';'\n        // reference\n      } else if (type === 'h') {\n        // helper\n        if (env.storage.nativeHelpers.get(name)) {\n          returnStr += env.storage.nativeHelpers.get(name)(currentBlock, env)\n        } else {\n          var helperReturn =\n            (isAsync ? 'await ' : '') +\n            \"c.l('H','\" +\n            name +\n            \"')(\" +\n            compileHelper(env, res, (currentBlock as ParentTemplateObject).d, params, isAsync)\n          if (blocks) {\n            helperReturn += ',' + compileBlocks(blocks, env)\n          } else {\n            helperReturn += ',[]'\n          }\n          helperReturn += ',c)'\n\n          returnStr += 'tR+=' + filter(helperReturn, filters) + ';'\n        }\n      } else if (type === 's') {\n        // self-closing helper\n\n        returnStr +=\n          'tR+=' +\n          filter(\n            (isAsync ? 'await ' : '') + \"c.l('H','\" + name + \"')({params:[\" + params + ']},[],c)',\n            filters\n          ) +\n          ';'\n      } else if (type === 'e') {\n        // execute\n        returnStr += content + '\\n'\n      } else if (type === 'q') {\n        // custom (implement later)\n      }\n    }\n  }\n\n  return returnStr\n}\n","import { copyProps } from './utils'\n\n/* TYPES */\n\ninterface Dict<T> {\n  // Basically, an object where all keys point to a value of the same type\n  [key: string]: T\n}\n\n/* END TYPES */\n\nclass Cacher<T> {\n  constructor (private cache: Dict<T>) {}\n  define (key: string, val: T) {\n    this.cache[key] = val\n  }\n  get (key: string) {\n    // string | array.\n    // TODO: allow array of keys to look down\n    // TODO: create plugin to allow referencing helpers, filters with dot notation\n    return this.cache[key]\n  }\n  remove (key: string) {\n    delete this.cache[key]\n  }\n  reset () {\n    this.cache = {}\n  }\n  load (cacheObj: Dict<T>) {\n    // TODO: this will err with deep objects and `storage` or `plugins` keys.\n    // Update Feb 26: EDITED so it shouldn't err\n    copyProps(this.cache, cacheObj, true)\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from './storage'\nimport SqrlErr from './err'\nimport { compileScope, compileScopeIntoFunction } from './compile-string'\nimport { hasOwnProp } from './utils'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { ParentTemplateObject } from './parse'\n\nexport interface HelperContent {\n  exec: Function\n  params: Array<any>\n  async?: boolean\n}\n\nexport interface HelperBlock extends HelperContent {\n  name: string\n}\n\nexport type HelperFunction = (\n  content: HelperContent,\n  blocks: Array<HelperBlock>,\n  config: SqrlConfig\n) => string | Promise<string>\n\nexport type FilterFunction = (str: string) => any | Promise<any>\n\ninterface EscapeMap {\n  '&': '&amp;'\n  '<': '&lt;'\n  '\"': '&quot;'\n  \"'\": '&#39;'\n  [index: string]: string\n}\n\ninterface IncludeHelperContent extends HelperContent {\n  params: [string, object]\n}\n\ninterface GenericData {\n  [index: string]: any\n}\n\n/* END TYPES */\n\nvar templates = new Cacher<TemplateFunction>({})\n\nfunction errWithBlocksOrFilters (\n  name: string,\n  blocks: Array<any> | false, // false means don't check\n  filters: Array<any> | false,\n  native?: boolean\n) {\n  if (blocks && blocks.length > 0) {\n    throw SqrlErr((native ? 'Native' : '') + \"Helper '\" + name + \"' doesn't accept blocks\")\n  }\n  if (filters && filters.length > 0) {\n    throw SqrlErr((native ? 'Native' : '') + \"Helper '\" + name + \"' doesn't accept filters\")\n  }\n}\n\n/* ASYNC LOOP FNs */\nfunction asyncArrLoop (arr: Array<any>, index: number, fn: Function, res: string, cb: Function) {\n  fn(arr[index], index).then(function (val: string) {\n    res += val\n    if (index === arr.length - 1) {\n      cb(res)\n    } else {\n      asyncArrLoop(arr, index + 1, fn, res, cb)\n    }\n  })\n}\n\nfunction asyncObjLoop (\n  obj: { [index: string]: any },\n  keys: Array<string>,\n  index: number,\n  fn: Function,\n  res: string,\n  cb: Function\n) {\n  fn(keys[index], obj[keys[index]]).then(function (val: string) {\n    res += val\n    if (index === keys.length - 1) {\n      cb(res)\n    } else {\n      asyncObjLoop(obj, keys, index + 1, fn, res, cb)\n    }\n  })\n}\n\n/* ASYNC LOOP FNs */\n\nvar helpers = new Cacher<HelperFunction>({\n  each: function (content: HelperContent, blocks: Array<HelperBlock>) {\n    var res = ''\n    var arr = content.params[0]\n    errWithBlocksOrFilters('each', blocks, false)\n\n    if (content.async) {\n      return new Promise(function (resolve) {\n        asyncArrLoop(arr, 0, content.exec, res, resolve)\n      })\n    } else {\n      for (var i = 0; i < arr.length; i++) {\n        res += content.exec(arr[i], i)\n      }\n      return res\n    }\n  },\n  foreach: function (content: HelperContent, blocks: Array<HelperBlock>) {\n    var obj = content.params[0]\n    errWithBlocksOrFilters('foreach', blocks, false)\n\n    if (content.async) {\n      return new Promise(function (resolve) {\n        asyncObjLoop(obj, Object.keys(obj), 0, content.exec, '', resolve)\n      })\n    } else {\n      var res = ''\n\n      for (var key in obj) {\n        if (!hasOwnProp(obj, key)) continue\n        res += content.exec(key, obj[key]) // todo: check on order\n      }\n      return res\n    }\n  },\n  include: function (\n    content: IncludeHelperContent,\n    blocks: Array<HelperBlock>,\n    config: SqrlConfig\n  ): string {\n    errWithBlocksOrFilters('include', blocks, false)\n    var template = config.storage.templates.get(content.params[0])\n    if (!template) {\n      throw SqrlErr('Could not fetch template \"' + content.params[0] + '\"')\n    }\n    return template(content.params[1], config)\n  } as HelperFunction,\n  extends: function (\n    content: IncludeHelperContent,\n    blocks: Array<HelperBlock>,\n    config: SqrlConfig\n  ): string {\n    var data: GenericData = content.params[1] || {}\n    data.content = content.exec()\n\n    for (var i = 0; i < blocks.length; i++) {\n      var currentBlock = blocks[i]\n      data[currentBlock.name] = currentBlock.exec()\n    }\n\n    var template = config.storage.templates.get(content.params[0])\n    if (!template) {\n      throw SqrlErr('Could not fetch template \"' + content.params[0] + '\"')\n    }\n    return template(data, config)\n  } as HelperFunction,\n  useScope: function (content: HelperContent, blocks: Array<HelperBlock>): string {\n    errWithBlocksOrFilters('useScope', blocks, false)\n\n    return content.exec(content.params[0])\n  } as HelperFunction\n})\n\nvar nativeHelpers = new Cacher<Function>({\n  if: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    errWithBlocksOrFilters('if', false, buffer.f, true)\n\n    var returnStr = 'if(' + buffer.p + '){' + compileScope(buffer.d, env) + '}'\n    if (buffer.b) {\n      for (var i = 0; i < buffer.b.length; i++) {\n        var currentBlock = buffer.b[i]\n        if (currentBlock.n === 'else') {\n          returnStr += 'else{' + compileScope(currentBlock.d, env) + '}'\n        } else if (currentBlock.n === 'elif') {\n          returnStr += 'else if(' + currentBlock.p + '){' + compileScope(currentBlock.d, env) + '}'\n        }\n      }\n    }\n    return returnStr\n  },\n  try: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    errWithBlocksOrFilters('try', false, buffer.f, true)\n\n    if (!buffer.b || buffer.b.length !== 1 || buffer.b[0].n !== 'catch') {\n      throw SqrlErr(\"native helper 'try' only accepts 1 block, 'catch'\")\n    }\n    var returnStr = 'try{' + compileScope(buffer.d, env) + '}'\n\n    var currentBlock = buffer.b[0]\n    returnStr +=\n      'catch' +\n      (currentBlock.res ? '(' + currentBlock.res + ')' : '') +\n      '{' +\n      compileScope(currentBlock.d, env) +\n      '}'\n\n    return returnStr\n  },\n  block: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    errWithBlocksOrFilters('block', buffer.b, buffer.f, true)\n\n    var returnStr =\n      'if(!' +\n      env.varName +\n      '[' +\n      buffer.p +\n      ']){tR+=(' +\n      compileScopeIntoFunction(buffer.d, '', env) +\n      ')()}else{tR+=' +\n      env.varName +\n      '[' +\n      buffer.p +\n      ']}'\n\n    return returnStr\n  }\n})\n\nvar escMap: EscapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s: string): string {\n  return escMap[s]\n}\n\nfunction XMLEscape (str: any) {\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  var newStr = String(str)\n  if (/[&<\"']/.test(newStr)) {\n    return newStr.replace(/[&<\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nvar filters = new Cacher<FilterFunction>({ e: XMLEscape })\n\nexport { templates, helpers, nativeHelpers, filters }\n","import { helpers, nativeHelpers, filters, templates } from './containers'\nimport SqrlErr from './err'\nimport { copyProps } from './utils'\n\n/* TYPES */\n\nexport type FetcherFunction = (container: 'H' | 'F', name: string) => Function | undefined\nimport { HelperFunction, FilterFunction } from './containers'\nimport { TemplateFunction } from './compile'\nimport { Cacher } from './storage'\n// import { TagType } from './parse'\n\ntype trimConfig = 'nl' | 'slurp' | false\n\nexport interface SqrlConfig {\n  varName: string\n  autoTrim: trimConfig | [trimConfig, trimConfig]\n  rmWhitespace?: boolean\n  autoEscape: boolean\n  defaultFilter: false | string\n  tags: [string, string]\n  l: FetcherFunction\n  plugins: Array<{ processFnString?: Function; processAST?: Function }>\n  async: boolean\n  storage: {\n    helpers: Cacher<HelperFunction>\n    nativeHelpers: Cacher<Function>\n    filters: Cacher<FilterFunction>\n    templates: Cacher<TemplateFunction>\n  }\n  prefixes: {\n    h: string\n    b: string\n    i: string\n    r: string\n    c: string\n    e: string\n    q: string\n    [index: string]: string\n  }\n  cache: boolean\n  views?: string | Array<string>\n  root?: string\n  filename?: string\n  name?: string\n  'view cache'?: boolean\n  useWith?: boolean\n  [index: string]: any\n}\n\nexport type PartialConfig = {\n  [P in keyof SqrlConfig]?: SqrlConfig[P]\n}\n\n/* END TYPES */\n\nvar defaultConfig: SqrlConfig = {\n  varName: 'it',\n  autoTrim: [false, 'nl'],\n  autoEscape: true,\n  defaultFilter: false,\n  tags: ['{{', '}}'],\n  l: function (container: 'H' | 'F', name: string): HelperFunction | FilterFunction | undefined {\n    if (container === 'H') {\n      var hRet = this.storage.helpers.get(name) as HelperFunction | undefined\n      if (hRet) {\n        return hRet\n      } else {\n        throw SqrlErr(\"Can't find helper '\" + name + \"'\")\n      }\n    } else if (container === 'F') {\n      var fRet = this.storage.filters.get(name) as FilterFunction | undefined\n      if (fRet) {\n        return fRet\n      } else {\n        throw SqrlErr(\"Can't find filter '\" + name + \"'\")\n      }\n    }\n  },\n  async: false,\n  storage: {\n    helpers: helpers,\n    nativeHelpers: nativeHelpers,\n    filters: filters,\n    templates: templates,\n  },\n  prefixes: {\n    h: '@',\n    b: '#',\n    i: '=',\n    r: '*',\n    c: '/',\n    e: '',\n    q: '?',\n  },\n  parse: {\n    refEqual: true,\n    helperTilde: false,\n  },\n  cache: false,\n  plugins: [],\n  useWith: false,\n}\n\ndefaultConfig.l.bind(defaultConfig)\n\nfunction getConfig(override: PartialConfig, baseConfig?: SqrlConfig): SqrlConfig {\n  // TODO: run more tests on this\n\n  var res: PartialConfig = {} // Linked\n  copyProps(res, defaultConfig) // Creates deep clone of res, 1 layer deep\n\n  if (baseConfig) {\n    copyProps(res, baseConfig)\n  }\n\n  if (override) {\n    copyProps(res, override)\n  }\n\n  ;(res as SqrlConfig).l.bind(res)\n\n  return res as SqrlConfig\n}\n\nexport { defaultConfig, getConfig }\n","import compileToString from './compile-string'\nimport { getConfig } from './config'\nimport { asyncFunc } from './utils'\nimport SqrlErr from './err'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nimport { CallbackFn } from './file-handlers'\nexport type TemplateFunction = (data: object, config: SqrlConfig, cb?: CallbackFn) => string\n\n/* END TYPES */\n\nexport default function compile (str: string, env?: PartialConfig): TemplateFunction {\n  var options: SqrlConfig = getConfig(env || {})\n  var ctor = Function // constructor\n\n  /* ASYNC HANDLING */\n  // The below code is modified from mde/ejs. All credit should go to them.\n  if (options.async) {\n    // Have to use generated function for this, since in envs without support,\n    // it breaks in parsing\n    if (asyncFunc) {\n      ctor = asyncFunc\n    } else {\n      throw SqrlErr(\"This environment doesn't support async/await\")\n    }\n  }\n\n  /* END ASYNC HANDLING */\n  try {\n    return new ctor(\n      options.varName,\n      'c', // SqrlConfig\n      'cb', // optional callback\n      compileToString(str, options)\n    ) as TemplateFunction // eslint-disable-line no-new-func\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw SqrlErr(\n        'Bad template syntax\\n\\n' +\n          e.message +\n          '\\n' +\n          Array(e.message.length + 1).join('=') +\n          '\\n' +\n          compileToString(str, options)\n      )\n    } else {\n      throw e\n    }\n  }\n}\n","import compile from './compile'\nimport { getConfig } from './config'\nimport { promiseImpl } from './utils'\nimport SqrlErr from './err'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { CallbackFn } from './file-handlers'\n\n/* END TYPES */\n\nfunction handleCache (template: string | TemplateFunction, options: SqrlConfig): TemplateFunction {\n  var templateFunc\n\n  if (options.cache && options.name && options.storage.templates.get(options.name)) {\n    return options.storage.templates.get(options.name)\n  }\n\n  if (typeof template === 'function') {\n    templateFunc = template\n  } else {\n    templateFunc = compile(template, options)\n  }\n\n  if (options.cache && options.name) {\n    options.storage.templates.define(options.name, templateFunc)\n  }\n\n  return templateFunc\n}\n\nexport default function render (\n  template: string | TemplateFunction,\n  data: object,\n  env?: PartialConfig,\n  cb?: CallbackFn\n) {\n  var options = getConfig(env || {})\n\n  if (options.async) {\n    var result\n    if (!cb) {\n      // No callback, try returning a promise\n      if (typeof promiseImpl === 'function') {\n        return new promiseImpl(function (resolve: Function, reject: Function) {\n          try {\n            result = handleCache(template, options)(data, options)\n            resolve(result)\n          } catch (err) {\n            reject(err)\n          }\n        })\n      } else {\n        throw SqrlErr(\"Please provide a callback function, this env doesn't support Promises\")\n      }\n    } else {\n      try {\n        handleCache(template, options)(data, options, cb)\n      } catch (err) {\n        return cb(err)\n      }\n    }\n  } else {\n    return handleCache(template, options)(data, options)\n  }\n}\n"],"names":["SqrlErr","message","obj","proto","err","Error","prototype","Object","setPrototypeOf","__proto__","ParseErr","str","indx","whitespace","slice","split","lineNo","length","colNo","Array","join","create","name","value","enumerable","promiseImpl","Function","Promise","asyncFunc","e","SyntaxError","hasOwnProp","prop","hasOwnProperty","call","copyProps","toObj","fromObj","notConfig","key","asyncRegExp","templateLitReg","singleQuoteReg","doubleQuoteReg","parse","env","rmWhitespace","replace","lastIndex","envPrefixes","prefixes","h","b","i","r","c","q","parseCloseReg","RegExp","tags","tagOpenReg","startInd","trimNextLeftWs","parseTag","tagOpenIndex","currentType","m","currentObj","f","numParens","currentAttribute","addAttrValue","valUnprocessed","val","trim","raw","async","test","push","found","search","exec","char","tagClose","slash","wsControl","index","t","punctuator","commentCloseInd","indexOf","parseResult","parseContext","parentObj","firstParse","d","tagOpenMatch","lastBlock","buffer","pushString","strng","shouldTrimRightOfString","wsLeft","wsRight","leftTrim","rightTrim","autoTrim","isArray","String","trimLeft","trimRight","trimWS","prefixType","precedingString","shouldTrimRightPrecedingString","prefix","hName","n","a","blockName","selfClosingHName","plugins","plugin","processAST","compileToString","Parse","res","useWith","varName","compileScope","processFnString","filter","filters","params","compileHelper","descendants","isAsync","ret","compileScopeIntoFunction","compileBlocks","blocks","block","p","buff","buffLength","returnStr","currentBlock","type","content","defaultFilter","autoEscape","storage","nativeHelpers","get","helperReturn","cache","this","Cacher","cacheObj","templates","errWithBlocksOrFilters","native","helpers","each","arr","resolve","asyncArrLoop","fn","cb","then","foreach","asyncObjLoop","keys","include","config","template","extends","data","useScope","if","try","escMap","&","<","\"","'","replaceChar","s","newStr","defaultConfig","l","container","hRet","fRet","refEqual","helperTilde","getConfig","override","baseConfig","bind","compile","options","ctor","handleCache","templateFunc","define","reject"],"mappings":"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"}