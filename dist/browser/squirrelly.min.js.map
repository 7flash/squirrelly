{"version":3,"file":"squirrelly.min.js","sources":["../../src/err.ts","../../src/parse.ts","../../src/utils.ts","../../src/storage.ts","../../src/containers.ts","../../src/compile-string.ts","../../src/compile.ts","../../src/config.ts","../../src/render.ts"],"sourcesContent":["// v 1.0.32\n\nfunction setPrototypeOf (obj: any, proto: any) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\nexport default function SqrlErr (message: string) {\n  var err = new Error(message)\n  setPrototypeOf(err, SqrlErr.prototype)\n  return err\n}\n\nSqrlErr.prototype = Object.create(Error.prototype, {\n  name: { value: 'Squirrelly Error', enumerable: false }\n})\n\n// TODO: Class transpilation adds a lot to the bundle size\n\nexport function ParseErr (message: string, str: string, indx: number) {\n  var whitespace = str\n    .slice(0, indx) // +2 because of {{\n    .split(/\\n/)\n\n  // console.log('whitespace: \\n' + JSON.stringify(whitespace))\n  var lineNo = whitespace.length\n  var colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    ' at line ' +\n    lineNo +\n    ' col ' +\n    colNo +\n    ':\\n\\n' +\n    '  ' +\n    str.split(/\\n/)[lineNo - 1] +\n    '\\n' +\n    '  ' +\n    Array(colNo).join(' ') +\n    '^'\n  throw SqrlErr(message)\n}\n","// Version 1.0.32\nimport { ParseErr } from './err'\nimport { trimLeft, trimRight } from './utils'\n\nexport type TagType = '~' | '/' | '#' | '?' | 'r' | '!' | 's'\nexport type TemplateAttribute = 'c' | 'f' | 'fp' | 'p' | 'n' | 'res' | 'err'\nexport type TemplateObjectAttribute = 'c' | 'p' | 'n' | 'res'\n\nexport type AstObject = string | TemplateObject\n\nexport type Filter = [string, string | undefined]\n\nexport interface TemplateObject {\n  n?: string\n  t?: string\n  f: Array<Filter>\n  c?: string\n  p?: string\n  res?: string\n  d: Array<AstObject> // Todo: Make this optional\n  b?: Array<TemplateObject>\n}\n\nexport default function Parse (str: string, tagOpen: string, tagClose: string): Array<AstObject> {\n  var powerchars = new RegExp(\n    '([|()]|=>)|' +\n    '\\'(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\\'\\\\\\\\])*?\\'|`(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\\\\\`])*?`|\"(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\"\\\\\\\\])*?\"' + // matches strings\n      '|\\\\/\\\\*[^]*?\\\\*\\\\/|((\\\\/)?(-|_)?' +\n      tagClose +\n      ')',\n    'g'\n  )\n  var tagOpenReg = new RegExp('([^]*?)' + tagOpen + '(-|_)?\\\\s*', 'g')\n  var startInd = 0\n  var trimNextLeftWs = ''\n\n  function parseTag (): TemplateObject {\n    // console.log(JSON.stringify(match))\n    var currentObj: TemplateObject = { f: [], d: [] }\n    var numParens = 0\n    var filterNumber = 0\n    var firstChar = str[startInd]\n    var currentAttribute: TemplateAttribute = 'c' // default - Valid values: 'c'=content, 'f'=filter, 'fp'=filter params, 'p'=param, 'n'=name\n    var currentType: TagType = 'r' // Default\n    startInd += 1 // assume we're gonna skip the first character\n\n    if (firstChar === '~' || firstChar === '#' || firstChar === '/') {\n      currentAttribute = 'n'\n      currentType = firstChar\n    } else if (firstChar === '!' || firstChar === '?') {\n      // ? for custom\n      currentType = firstChar\n    } else {\n      startInd -= 1\n    }\n\n    function addAttrValue (indx: number, strng?: string) {\n      var valUnprocessed = str.slice(startInd, indx) + (strng || '')\n      // console.log(valUnprocessed)\n      var val = valUnprocessed.trim()\n      if (currentAttribute === 'f') {\n        currentObj.f[filterNumber - 1][0] += val // filterNumber - 1 because first filter: 0->1, but zero-indexed arrays\n      } else if (currentAttribute === 'fp') {\n        currentObj.f[filterNumber - 1][1] += val\n      } else if (currentAttribute === 'err') {\n        if (val) {\n          var found = valUnprocessed.search(/\\S/)\n          ParseErr('invalid syntax', str, startInd + found)\n        }\n      } else if (currentAttribute) {\n        // if (currentObj[currentAttribute]) { // TODO make sure no errs\n        //   currentObj[currentAttribute] += val\n        // } else {\n        currentObj[currentAttribute] = val\n        // }\n      }\n      startInd = indx + 1\n    }\n    var m\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = powerchars.exec(str)) !== null) {\n      var char = m[1]\n      var tagClose = m[2]\n      var slash = m[3]\n      var wsControl = m[4]\n      var i = m.index\n\n      if (char) {\n        // Power character\n        if (char === '(') {\n          if (numParens === 0) {\n            if (currentAttribute === 'n') {\n              addAttrValue(i)\n              currentAttribute = 'p'\n            } else if (currentAttribute === 'f') {\n              addAttrValue(i)\n              currentAttribute = 'fp'\n            }\n          }\n          numParens++\n        } else if (char === ')') {\n          numParens--\n          if (numParens === 0 && currentAttribute !== 'c') {\n            // Then it's closing a filter, block, or helper\n            addAttrValue(i)\n\n            currentAttribute = 'err' // Reset the current attribute\n          }\n        } else if (numParens === 0 && char === '|') {\n          addAttrValue(i) // this should actually always be whitespace or empty\n          currentAttribute = 'f'\n          filterNumber++\n          //   TODO if (!currentObj.f) {\n          //     currentObj.f = [] // Initial assign\n          //   }\n          currentObj.f[filterNumber - 1] = ['', '']\n        } else if (char === '=>') {\n          addAttrValue(i)\n          startInd += 1 // this is 2 chars\n          currentAttribute = 'res'\n        }\n      } else if (tagClose) {\n        addAttrValue(i)\n        startInd += tagClose.length - 1\n        tagOpenReg.lastIndex = startInd\n        // console.log('tagClose: ' + startInd)\n        trimNextLeftWs = wsControl\n        if (slash && currentType === '~') {\n          currentType = 's'\n        } // TODO throw err\n        currentObj.t = currentType\n        return currentObj\n      }\n    }\n    // TODO: Do I need this?\n    ParseErr('unclosed tag', str, str.length)\n    return currentObj // To prevent TypeScript from erroring\n  }\n\n  function parseContext (parentObj: TemplateObject, firstParse?: boolean): TemplateObject {\n    parentObj.b = [] // assume there will be blocks\n    var lastBlock: TemplateObject | boolean = false\n    var buffer: Array<AstObject> = []\n\n    function pushString (strng: string, wsAhead?: string) {\n      if (strng) {\n        var stringToPush = strng.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\")\n        if (wsAhead) {\n          stringToPush = trimRight(stringToPush, wsAhead)\n        }\n        if (trimNextLeftWs) {\n          stringToPush = trimLeft(stringToPush, trimNextLeftWs)\n          trimNextLeftWs = ''\n        }\n        buffer.push(stringToPush)\n      }\n    }\n\n    // Random TODO: parentObj.b doesn't need to have t: #\n    var tagOpenMatch\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((tagOpenMatch = tagOpenReg.exec(str)) !== null) {\n      var precedingString = tagOpenMatch[1]\n      var ws = tagOpenMatch[2]\n\n      pushString(precedingString, ws)\n      startInd = tagOpenMatch.index + tagOpenMatch[0].length\n\n      var currentObj = parseTag()\n      // ===== NOW ADD THE OBJECT TO OUR BUFFER =====\n\n      var currentType = currentObj.t\n      if (currentType === '~') {\n        currentObj = parseContext(currentObj) // currentObj is the parent object\n        buffer.push(currentObj)\n      } else if (currentType === '/') {\n        if (parentObj.n === currentObj.n) {\n          if (lastBlock) {\n            // If there's a previous block\n            lastBlock.d = buffer\n            parentObj.b.push(lastBlock)\n          } else {\n            parentObj.d = buffer\n          }\n          // console.log('parentObj: ' + JSON.stringify(parentObj))\n          return parentObj\n        } else {\n          ParseErr(\n            \"Helper start and end don't match\",\n            str,\n            tagOpenMatch.index + tagOpenMatch[0].length\n          )\n        }\n      } else if (currentType === '#') {\n        if (lastBlock) {\n          // If there's a previous block\n          lastBlock.d = buffer\n          parentObj.b.push(lastBlock)\n        } else {\n          parentObj.d = buffer\n        }\n        lastBlock = currentObj // Set the 'lastBlock' object to the value of the current block\n\n        buffer = []\n      } else {\n        buffer.push(currentObj)\n      }\n      // ===== DONE ADDING OBJECT TO BUFFER =====\n    }\n\n    if (firstParse) {\n      // TODO: more intuitive\n      pushString(str.slice(startInd, str.length))\n      parentObj.d = buffer\n    }\n\n    return parentObj\n  }\n\n  var parseResult = parseContext({ f: [], d: [] }, true)\n  // console.log(JSON.stringify(parseResult))\n  return parseResult.d // Parse the very outside context\n}\n\n// TODO: Don't add f[] by default. Use currentObj.f[currentObj.f.length - 1] instead of using filterNumber\n","/**\n * Trims either one whitespace character from the beginning of a string, or all\n *\n * @remarks\n * Includes trimLeft polyfill\n *\n * @param str - String to trim\n * @param type - Either '-' (trim only 1 whitespace char) or '_' (trim all whitespace)\n * @returns Trimmed string\n *\n */\n\n// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\nfunction trimLeft (str: string, type: string): string {\n  if (type === '_') {\n    // full slurp\n    if (String.prototype.trimLeft) {\n      return str.trimLeft()\n    } else {\n      return str.replace(/^[\\s\\uFEFF\\xA0]+/, '')\n    }\n  } else {\n    // type must be '-'\n    return str.replace(/^(?:[\\s\\uFEFF\\xA0]|\\r\\n)/, '')\n  }\n}\n\n/**\n * Trims either one whitespace character from the end of the string, or all\n *\n * @remarks\n * Includes trimRight polyfill\n *\n * @param str - String to trim\n * @param type - Either '-' (trim only 1 whitespace char) or '_' (trim all whitespace)\n * @returns Trimmed string\n *\n */\n\nfunction trimRight (str: string, type: string): string {\n  if (type === '_') {\n    // full slurp\n    if (String.prototype.trimRight) {\n      return str.trimRight()\n    } else {\n      return str.replace(/[\\s\\uFEFF\\xA0]+$/, '')\n    }\n  } else {\n    // type must be '-'\n    return str.replace(/(?:[\\s\\uFEFF\\xA0]|\\r\\n)$/, '') // TODO: make sure this gets \\r\\n\n  }\n}\n\ninterface EscapeMap {\n  '&': '&amp;'\n  '<': '&lt;'\n  '\"': '&quot;'\n  \"'\": '&#39;'\n  [index: string]: string\n}\n\nvar escMap: EscapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s: string): string {\n  return escMap[s]\n}\n\nfunction XMLEscape (str: any) {\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  var newStr = String(str)\n  if (/[&<\"']/.test(newStr)) {\n    return newStr.replace(/[&<\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nexport { trimLeft, trimRight, XMLEscape }\n","import SqrlErr from './err'\n\ninterface ICache<T> {\n  // Basically, an object where all keys point to a value of the same type\n  [key: string]: T\n}\n\nclass Cacher<T> {\n  constructor (private cache: ICache<T>) {}\n  define (key: string, val: T) {\n    this.cache[key] = val\n  }\n  get (key: string) {\n    // string | array.\n    // TODO: allow array of keys to look down\n    return this.cache[key]\n  }\n  remove (key: string) {\n    delete this.cache[key]\n  }\n  clear () {\n    this.cache = {}\n  }\n  load (cacheObj: ICache<T>) {\n    this.cache = cacheObj\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from './storage'\nimport { AstObject, Filter, TemplateObject } from './parse'\nimport SqrlErr from './err'\nimport { ParseScope } from './compile-string'\n\ntype TemplateFunction = (options: object, Sqrl: object) => string\n\n// interface ITemplate {\n//   exec: (options: object, Sqrl: object) => string\n// }\n\nvar Templates = new Cacher<TemplateFunction>({})\n\n// Templates.define(\"hey\", function (it) {return \"hey\"})\n\nvar Layouts = new Cacher<TemplateFunction>({})\n\nvar Partials = new Cacher<TemplateFunction>({})\n\ninterface HelperBlock {\n  exec: Function\n  params: Array<any>\n}\ntype HelperFunction = (content: HelperBlock, blocks: Array<HelperBlock>) => string\n\nvar Helpers = new Cacher<HelperFunction>({\n  each: function (content: HelperBlock) {\n    // helperStart is called with (params, id) but id isn't needed\n    var res = ''\n    var param = content.params[0]\n    for (var i = 0; i < param.length; i++) {\n      res += content.exec(param[i], i)\n    }\n    return res\n  },\n  foreach: function (content: HelperBlock) {\n    var res = ''\n    var param = content.params[0]\n    for (var key in param) {\n      if (!param.hasOwnProperty(key)) continue\n      res += content.exec(param, key)\n    }\n    return res\n  }\n})\n\nvar NativeHelpers = new Cacher<Function>({\n  if: function (buffer: TemplateObject) {\n    if (buffer.f && buffer.f.length) {\n      throw SqrlErr(\"native helper 'if' can't have filters\")\n    }\n    var returnStr = 'if(' + buffer.p + '){' + ParseScope(buffer.d) + '}'\n    if (buffer.b) {\n      for (var i = 0; i < buffer.b.length; i++) {\n        var currentBlock = buffer.b[i]\n        if (currentBlock.n === 'else') {\n          returnStr += 'else{' + ParseScope(currentBlock.d) + '}'\n        } else if (currentBlock.n === 'elif') {\n          returnStr += 'else if(' + currentBlock.p + '){' + ParseScope(currentBlock.d) + '}'\n        }\n      }\n    }\n    return returnStr\n  }\n})\n\ntype FilterFunction = (str: string) => string\n\nvar Filters = new Cacher<FilterFunction>({})\n\nexport { Templates, Layouts, Partials, Helpers, NativeHelpers, Filters }\n","import Parse, { AstObject, Filter, TemplateObject } from './parse'\nimport { NativeHelpers } from './containers'\n\nfunction CompileToString (str: string, tagOpen: string, tagClose: string) {\n  var buffer: Array<AstObject> = Parse(str, tagOpen, tagClose)\n  return (\n    \"var tR='';\" +\n    ParseScope(buffer)\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r') +\n    'return tR'\n  )\n}\n\n// TODO: rename parseHelper, parseScope, etc. to compileHelper, compileScope, etc.\n// TODO: Use type intersections for TemplateObject, etc.\n// so I don't have to make properties mandatory\n\nfunction parseHelper (res: string, descendants: Array<AstObject>, params: string, name?: string) {\n  var ret = '{exec:' + ParseScopeIntoFunction(descendants, res) + ',params:[' + params + ']'\n  if (name) {\n    ret += \",name:'\" + name + \"'\"\n  }\n  ret += '}'\n  return ret\n}\n\nfunction parseBlocks (blocks: Array<TemplateObject>) {\n  var ret = '['\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i]\n    ret += parseHelper(block.res || '', block.d || [], block.p || '', block.n || '')\n    if (i < blocks.length) {\n      ret += ','\n    }\n  }\n  ret += ']'\n  return ret\n}\n\nexport function ParseScopeIntoFunction (buff: Array<AstObject>, res: string) {\n  return 'function(' + res + \"){var tR='';\" + ParseScope(buff) + 'return tR}'\n}\n\nexport function ParseScope (buff: Array<AstObject>) {\n  var i = 0\n  var buffLength = buff.length\n  var returnStr = ''\n\n  for (i; i < buffLength; i++) {\n    var currentBlock = buff[i]\n    if (typeof currentBlock === 'string') {\n      var str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str /*.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\")*/ + \"';\"\n      // I believe the above replace is already in Parse\n    } else {\n      var type = currentBlock.t // ~, s, !, ?, r\n      var content = currentBlock.c || ''\n      var filters = currentBlock.f || []\n      var name = currentBlock.n || ''\n      var params = currentBlock.p || ''\n      var res = currentBlock.res || ''\n      var blocks = currentBlock.b || []\n\n      if (type === 'r') {\n        var filtered = filter(content, filters)\n        returnStr += 'tR+=' + filtered + ';'\n        // reference\n      } else if (type === '~') {\n        // helper\n        // TODO: native helpers\n        if (NativeHelpers.get(name)) {\n          returnStr += NativeHelpers.get(name)(currentBlock)\n        } else {\n          var helperReturn =\n            \"Sqrl.H.get('\" + name + \"')(\" + parseHelper(res, currentBlock.d, params)\n          if (blocks) {\n            helperReturn += ',' + parseBlocks(blocks)\n          }\n          helperReturn += ')'\n\n          helperReturn = filter(helperReturn, filters)\n          returnStr += 'tR+=' + helperReturn + ';'\n        }\n      } else if (type === 's') {\n        returnStr += 'tR+=' + filter(\"Sqrl.H.get('\" + name + \"')(\" + params + ')', filters) + ';'\n        // self-closing helper\n      } else if (type === '!') {\n        // execute\n        returnStr += content + ';'\n      } else if (type === '?') {\n        // custom (implement later)\n      }\n    }\n  }\n  return returnStr\n}\n\nfunction filter (str: string, filters: Array<Filter>) {\n  for (var i = 0; i < filters.length; i++) {\n    var name = filters[i][0]\n    var params = filters[i][1]\n    str = \"Sqrl.F.get('\" + name + \"')(\" + str\n    if (params) {\n      str += ',' + params\n    }\n    str += ')'\n  }\n  return str\n}\n\nexport default CompileToString\n","import CompileToString from './compile-string'\n\nfunction Compile (str: string, tagOpen: string, tagClose: string) {\n  return new Function('it', 'Sqrl', CompileToString(str, tagOpen, tagClose)) // eslint-disable-line no-new-func\n}\n\nexport default Compile\n// console.log(Compile('hi {{this}} hey', '{{', '}}').toString())\n","interface SqrlConfiguration {\n  varName: string\n  autoTrim: boolean | 'nl'\n  autoEscape: boolean\n  [index: string]: any\n}\n\nvar Conf: SqrlConfiguration = {\n  varName: 'it',\n  autoTrim: false,\n  autoEscape: true\n}\n\nfunction Config (key: string, val: any): void {\n  Conf[key] = val\n}\n\n// TODO: Fix types for this\n\nexport { Conf, Config }\n","import Compile from './compile'\nimport { Helpers, Filters } from './containers'\n\nfunction Render (template: string, options: object): string {\n  var templateFunc = Compile(template, '{{', '}}')\n  return templateFunc(options, { H: Helpers, F: Filters })\n}\n\nexport default Render\nexport type TemplateFunction = (options: object, Sqrl: object) => string\n"],"names":["SqrlErr","message","obj","proto","err","Error","prototype","Object","setPrototypeOf","__proto__","ParseErr","str","indx","whitespace","slice","split","lineNo","length","colNo","Array","join","Parse","tagOpen","tagClose","powerchars","RegExp","tagOpenReg","startInd","trimNextLeftWs","parseTag","m","currentObj","f","d","numParens","filterNumber","firstChar","currentAttribute","currentType","addAttrValue","strng","valUnprocessed","val","trim","found","search","exec","char","slash","wsControl","i","index","lastIndex","t","parseContext","parentObj","firstParse","b","tagOpenMatch","lastBlock","buffer","pushString","wsAhead","stringToPush","replace","type","String","trimRight","trimLeft","push","n","create","name","value","enumerable","cache","this","Cacher","key","cacheObj","Layouts","Partials","Helpers","each","content","res","param","params","foreach","hasOwnProperty","NativeHelpers","if","returnStr","p","ParseScope","currentBlock","Filters","CompileToString","parseHelper","descendants","ret","ParseScopeIntoFunction","parseBlocks","blocks","block","buff","buffLength","c","filters","filter","get","helperReturn","Compile","Function","template","options","templateFunc","H","F"],"mappings":"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"}