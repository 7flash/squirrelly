{"version":3,"file":"squirrelly.min.js","sources":["../../src/err.ts","../../src/parse.ts","../../src/utils.ts","../../src/storage.ts","../../src/containers.ts","../../src/compile-string.ts","../../src/config.ts","../../src/compile.ts","../../src/render.ts"],"sourcesContent":["// v 1.0.32\n\nfunction setPrototypeOf (obj: any, proto: any) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\nexport default function SqrlErr (message: string): Error {\n  var err = new Error(message)\n  setPrototypeOf(err, SqrlErr.prototype)\n  return err\n}\n\nSqrlErr.prototype = Object.create(Error.prototype, {\n  name: { value: 'Squirrelly Error', enumerable: false }\n})\n\n// TODO: Class transpilation adds a lot to the bundle size\n\nexport function ParseErr (message: string, str: string, indx: number) {\n  var whitespace = str\n    .slice(0, indx) // +2 because of {{\n    .split(/\\n/)\n\n  // console.log('whitespace: \\n' + JSON.stringify(whitespace))\n  var lineNo = whitespace.length\n  var colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    ' at line ' +\n    lineNo +\n    ' col ' +\n    colNo +\n    ':\\n\\n' +\n    '  ' +\n    str.split(/\\n/)[lineNo - 1] +\n    '\\n' +\n    '  ' +\n    Array(colNo).join(' ') +\n    '^'\n  throw SqrlErr(message)\n}\n","// Version 1.0.32\nimport SqrlErr, { ParseErr } from './err'\nimport { trimWS } from './utils'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\nexport type TagType = '~' | '/' | '#' | '?' | 'r' | '!' | 's'\nexport type TemplateAttribute = 'c' | 'f' | 'fp' | 'p' | 'n' | 'res' | 'err'\nexport type TemplateObjectAttribute = 'c' | 'p' | 'n' | 'res'\n\nexport type AstObject = string | TemplateObject\n\nexport type Filter = [string, string | undefined]\n\nexport interface TemplateObject {\n  n?: string\n  t?: string\n  f: Array<Filter>\n  c?: string\n  p?: string\n  res?: string\n  d?: Array<AstObject>\n  raw?: boolean\n  b?: Array<ParentTemplateObject>\n}\n\nexport interface ParentTemplateObject extends TemplateObject {\n  d: Array<AstObject>\n  b: Array<ParentTemplateObject>\n}\n\n/* END TYPES */\n\nexport default function parse (str: string, env: SqrlConfig): Array<AstObject> {\n  var powerchars = new RegExp(\n    '([|()]|=>)|' +\n    '\\'(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\\'\\\\\\\\])*?\\'|`(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\\\\\`])*?`|\"(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\"\\\\\\\\])*?\"' + // matches strings\n      '|\\\\/\\\\*[^]*?\\\\*\\\\/|((\\\\/)?(-|_)?' +\n      env.tags[1] +\n      ')',\n    'g'\n  )\n  var tagOpenReg = new RegExp('([^]*?)' + env.tags[0] + '(-|_)?\\\\s*', 'g')\n  var startInd = 0\n  var trimNextLeftWs = ''\n\n  function parseTag (): TemplateObject {\n    // console.log(JSON.stringify(match))\n    var currentObj: TemplateObject = { f: [] }\n    var numParens = 0\n    var firstChar = str[startInd]\n    var currentAttribute: TemplateAttribute = 'c' // default - Valid values: 'c'=content, 'f'=filter, 'fp'=filter params, 'p'=param, 'n'=name\n    var currentType: TagType = 'r' // Default\n    startInd += 1 // assume we're gonna skip the first character\n\n    if (firstChar === '~' || firstChar === '#' || firstChar === '/') {\n      currentAttribute = 'n'\n      currentType = firstChar\n    } else if (firstChar === '!' || firstChar === '?') {\n      // ? for custom\n      currentType = firstChar\n    } else if (firstChar === '*') {\n      currentObj.raw = true\n    } else {\n      startInd -= 1\n    }\n\n    function addAttrValue (indx: number) {\n      var valUnprocessed = str.slice(startInd, indx)\n      // console.log(valUnprocessed)\n      var val = valUnprocessed.trim()\n      if (currentAttribute === 'f') {\n        if (val === 'safe') {\n          currentObj.raw = true\n        } else {\n          currentObj.f.push([val, ''])\n        }\n      } else if (currentAttribute === 'fp') {\n        currentObj.f[currentObj.f.length - 1][1] += val\n      } else if (currentAttribute === 'err') {\n        if (val) {\n          var found = valUnprocessed.search(/\\S/)\n          ParseErr('invalid syntax', str, startInd + found)\n        }\n      } else {\n        // if (currentObj[currentAttribute]) { // TODO make sure no errs\n        //   currentObj[currentAttribute] += val\n        // } else {\n        currentObj[currentAttribute] = val\n        // }\n      }\n      startInd = indx + 1\n    }\n\n    powerchars.lastIndex = startInd\n\n    var m\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = powerchars.exec(str)) !== null) {\n      var char = m[1]\n      var tagClose = m[2]\n      var slash = m[3]\n      var wsControl = m[4]\n      var i = m.index\n\n      if (char) {\n        // Power character\n        if (char === '(') {\n          if (numParens === 0) {\n            if (currentAttribute === 'n') {\n              addAttrValue(i)\n              currentAttribute = 'p'\n            } else if (currentAttribute === 'f') {\n              addAttrValue(i)\n              currentAttribute = 'fp'\n            }\n          }\n          numParens++\n        } else if (char === ')') {\n          numParens--\n          if (numParens === 0 && currentAttribute !== 'c') {\n            // Then it's closing a filter, block, or helper\n            addAttrValue(i)\n\n            currentAttribute = 'err' // Reset the current attribute\n          }\n        } else if (numParens === 0 && char === '|') {\n          addAttrValue(i) // this should actually always be whitespace or empty\n          currentAttribute = 'f'\n        } else if (char === '=>') {\n          addAttrValue(i)\n          startInd += 1 // this is 2 chars\n          currentAttribute = 'res'\n        }\n      } else if (tagClose) {\n        addAttrValue(i)\n        startInd = i + m[0].length\n        tagOpenReg.lastIndex = startInd\n        // console.log('tagClose: ' + startInd)\n        trimNextLeftWs = wsControl\n        if (slash && currentType === '~') {\n          currentType = 's'\n        } // TODO throw err\n        currentObj.t = currentType\n        return currentObj\n      }\n    }\n    // TODO: Do I need this?\n    ParseErr('unclosed tag', str, str.length)\n    return currentObj // To prevent TypeScript from erroring\n  }\n\n  function parseContext (parentObj: TemplateObject, firstParse?: boolean): ParentTemplateObject {\n    parentObj.b = [] // assume there will be blocks // TODO: perf optimize this\n    parentObj.d = []\n    var lastBlock: ParentTemplateObject | false = false\n    var buffer: Array<AstObject> = []\n\n    function pushString (strng: string, shouldTrimRightPrecedingString?: string) {\n      if (strng) {\n        var stringToPush = strng.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\")\n        stringToPush = trimWS(stringToPush, env, trimNextLeftWs, shouldTrimRightPrecedingString)\n\n        if (stringToPush) {\n          buffer.push(stringToPush)\n        }\n      }\n    }\n\n    // Random TODO: parentObj.b doesn't need to have t: #\n    var tagOpenMatch\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((tagOpenMatch = tagOpenReg.exec(str)) !== null) {\n      var precedingString = tagOpenMatch[1]\n      var shouldTrimRightPrecedingString = tagOpenMatch[2]\n\n      pushString(precedingString, shouldTrimRightPrecedingString)\n      startInd = tagOpenMatch.index + tagOpenMatch[0].length\n\n      var currentObj = parseTag()\n      // ===== NOW ADD THE OBJECT TO OUR BUFFER =====\n\n      var currentType = currentObj.t\n      if (currentType === '~') {\n        currentObj = parseContext(currentObj) // currentObj is the parent object\n        buffer.push(currentObj)\n      } else if (currentType === '/') {\n        if (parentObj.n === currentObj.n) {\n          if (lastBlock) {\n            // If there's a previous block\n            lastBlock.d = buffer\n            parentObj.b.push(lastBlock)\n          } else {\n            parentObj.d = buffer\n          }\n          // console.log('parentObj: ' + JSON.stringify(parentObj))\n          return parentObj as ParentTemplateObject\n        } else {\n          ParseErr(\n            \"Helper start and end don't match\",\n            str,\n            tagOpenMatch.index + tagOpenMatch[0].length\n          )\n        }\n      } else if (currentType === '#') {\n        if (lastBlock) {\n          // If there's a previous block\n          lastBlock.d = buffer\n          parentObj.b.push(lastBlock)\n        } else {\n          parentObj.d = buffer\n        }\n        lastBlock = currentObj as ParentTemplateObject // Set the 'lastBlock' object to the value of the current block\n\n        buffer = []\n      } else {\n        buffer.push(currentObj)\n      }\n      // ===== DONE ADDING OBJECT TO BUFFER =====\n    }\n\n    if (firstParse) {\n      // TODO: more intuitive\n      pushString(str.slice(startInd, str.length))\n      parentObj.d = buffer\n    } else {\n      throw SqrlErr('unclosed helper \"' + parentObj.n + '\"')\n      // It should have returned by now\n    }\n\n    return parentObj as ParentTemplateObject\n  }\n\n  var parseResult = parseContext({ f: [] }, true)\n  // console.log(JSON.stringify(parseResult))\n  return parseResult.d // Parse the very outside context\n}\n","// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\ninterface SomeObj {\n  [key: string]: any\n}\n\n/* END TYPES */\n\nfunction trimWS (str: string, env: SqrlConfig, wsLeft: string, wsRight?: string): string {\n  var leftTrim\n  var rightTrim\n\n  if (typeof env.autoTrim === 'string') {\n    leftTrim = rightTrim = env.autoTrim\n  } else if (Array.isArray(env.autoTrim)) {\n    // kinda confusing\n    // but _}} will trim the left side of the following string\n    leftTrim = env.autoTrim[1]\n    rightTrim = env.autoTrim[0]\n  }\n\n  if (wsLeft) {\n    leftTrim = wsLeft\n  }\n\n  if (wsRight) {\n    rightTrim = wsRight\n  }\n\n  if (\n    (leftTrim === 'slurp' && rightTrim === 'slurp') ||\n    (leftTrim === true && rightTrim === true)\n  ) {\n    return str.trim()\n  }\n\n  if (leftTrim === '_' || leftTrim === 'slurp' || leftTrim === true) {\n    // console.log('trimming left' + leftTrim)\n    // full slurp\n    if (String.prototype.trimLeft) {\n      str = str.trimLeft()\n    } else {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+/, '')\n    }\n  } else if (leftTrim === '-' || leftTrim === 'nl') {\n    // console.log('trimming left nl' + leftTrim)\n    // nl trim\n    str = str.replace(/^(?:\\n|\\r|\\r\\n)/, '')\n  }\n\n  if (rightTrim === '_' || rightTrim === 'slurp' || rightTrim === true) {\n    // console.log('trimming right' + rightTrim)\n    // full slurp\n    if (String.prototype.trimRight) {\n      str = str.trimRight()\n    } else {\n      str = str.replace(/[\\s\\uFEFF\\xA0]+$/, '')\n    }\n  } else if (rightTrim === '-' || rightTrim === 'nl') {\n    // console.log('trimming right nl' + rightTrim)\n    // nl trim\n    str = str.replace(/(?:\\n|\\r|\\r\\n)$/, '') // TODO: make sure this gets \\r\\n\n  }\n\n  return str\n}\n\n// Below is adapted from EJS\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\n\nfunction shallowCopy<res> (to: SomeObj, from: Partial<res>): res {\n  for (var p in from) {\n    to[p] = from[p]\n  }\n  return to as res\n}\n\nexport { trimWS, shallowCopy }\n","/* TYPES */\n\ninterface ICache<T> {\n  // Basically, an object where all keys point to a value of the same type\n  [key: string]: T\n}\n\n/* END TYPES */\n\nclass Cacher<T> {\n  constructor (private cache: ICache<T>) {}\n  define (key: string, val: T) {\n    this.cache[key] = val\n  }\n  get (key: string) {\n    // string | array.\n    // TODO: allow array of keys to look down\n    // TODO: create plugin to allow referencing helpers, filters with dot notation\n    return this.cache[key]\n  }\n  remove (key: string) {\n    delete this.cache[key]\n  }\n  reset () {\n    this.cache = {}\n  }\n  load (cacheObj: ICache<T>) {\n    for (var key in cacheObj) {\n      if (cacheObj.hasOwnProperty(key)) {\n        this.cache[key] = cacheObj[key]\n      }\n    }\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from './storage'\nimport SqrlErr from './err'\nimport { compileScope } from './compile-string'\n// interface ITemplate {\n//   exec: (options: object, Sqrl: object) => string\n// }\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { ParentTemplateObject } from './parse'\n\nexport interface HelperBlock {\n  exec: Function\n  params: Array<any>\n}\nexport type HelperFunction = (\n  content: HelperBlock,\n  blocks: Array<HelperBlock>,\n  config: SqrlConfig\n) => string\n\ntype FilterFunction = (str: string) => string\n\ninterface EscapeMap {\n  '&': '&amp;'\n  '<': '&lt;'\n  '\"': '&quot;'\n  \"'\": '&#39;'\n  [index: string]: string\n}\n\n/* END TYPES */\n\nvar templates = new Cacher<TemplateFunction>({})\n\nvar helpers = new Cacher<HelperFunction>({\n  each: function (content: HelperBlock) {\n    // helperStart is called with (params, id) but id isn't needed\n    var res = ''\n    var param = content.params[0]\n    for (var i = 0; i < param.length; i++) {\n      res += content.exec(param[i], i)\n    }\n    return res\n  },\n  foreach: function (content: HelperBlock) {\n    var res = ''\n    var param = content.params[0]\n    for (var key in param) {\n      if (!param.hasOwnProperty(key)) continue\n      res += content.exec(key, param[key]) // todo: I think this is wrong?\n    }\n    return res\n  }\n})\n\nvar nativeHelpers = new Cacher<Function>({\n  if: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    if (buffer.f && buffer.f.length) {\n      throw SqrlErr(\"native helper 'if' can't have filters\")\n    }\n    var returnStr = 'if(' + buffer.p + '){' + compileScope(buffer.d, env) + '}'\n    if (buffer.b) {\n      for (var i = 0; i < buffer.b.length; i++) {\n        var currentBlock = buffer.b[i]\n        if (currentBlock.n === 'else') {\n          returnStr += 'else{' + compileScope(currentBlock.d, env) + '}'\n        } else if (currentBlock.n === 'elif') {\n          returnStr += 'else if(' + currentBlock.p + '){' + compileScope(currentBlock.d, env) + '}'\n        }\n      }\n    }\n    return returnStr\n  },\n  try: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    if (buffer.f && buffer.f.length) {\n      throw SqrlErr(\"native helper 'try' can't have filters\")\n    }\n    if (!buffer.b || buffer.b.length !== 1 || buffer.b[0].n !== 'catch') {\n      throw SqrlErr(\"native helper 'try' only accepts 1 block, 'catch'\")\n    }\n    var returnStr = 'try{' + compileScope(buffer.d, env) + '}'\n\n    var currentBlock = buffer.b[0]\n    returnStr +=\n      'catch' +\n      (currentBlock.res ? '(' + currentBlock.res + ')' : '') +\n      '{' +\n      compileScope(currentBlock.d, env) +\n      '}'\n\n    return returnStr\n  }\n})\n\nvar escMap: EscapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s: string): string {\n  return escMap[s]\n}\n\nfunction XMLEscape (str: any) {\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  var newStr = String(str)\n  if (/[&<\"']/.test(newStr)) {\n    return newStr.replace(/[&<\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nvar filters = new Cacher<FilterFunction>({ e: XMLEscape })\n\nexport { templates, helpers, nativeHelpers, filters }\n","import Parse from './parse'\nimport { nativeHelpers } from './containers'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { AstObject, Filter, ParentTemplateObject } from './parse'\n\n/* END TYPES */\n\nfunction compileToString (str: string, env: SqrlConfig) {\n  var buffer: Array<AstObject> = Parse(str, env)\n  return (\n    \"var tR='';\" +\n    compileScope(buffer, env)\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r') +\n    'return tR'\n  )\n}\n\n// TODO: Use type intersections for TemplateObject, etc.\n// so I don't have to make properties mandatory\n\nfunction compileHelper (\n  env: SqrlConfig,\n  res: string,\n  descendants: Array<AstObject>,\n  params: string,\n  name?: string\n) {\n  var ret = '{exec:' + compileScopeIntoFunction(descendants, res, env) + ',params:[' + params + ']'\n  if (name) {\n    ret += \",name:'\" + name + \"'\"\n  }\n  ret += '}'\n  return ret\n}\n\nfunction compileBlocks (blocks: Array<ParentTemplateObject>, env: SqrlConfig) {\n  var ret = '['\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i]\n    ret += compileHelper(env, block.res || '', block.d, block.p || '', block.n)\n    if (i < blocks.length) {\n      ret += ','\n    }\n  }\n  ret += ']'\n  return ret\n}\n\nexport function compileScopeIntoFunction (buff: Array<AstObject>, res: string, env: SqrlConfig) {\n  return 'function(' + res + \"){var tR='';\" + compileScope(buff, env) + 'return tR}'\n}\n\nexport function compileScope (buff: Array<AstObject>, env: SqrlConfig) {\n  var i = 0\n  var buffLength = buff.length\n  var returnStr = ''\n\n  for (i; i < buffLength; i++) {\n    var currentBlock = buff[i]\n    if (typeof currentBlock === 'string') {\n      var str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str + \"';\"\n    } else {\n      var type = currentBlock.t // ~, s, !, ?, r\n      var content = currentBlock.c || ''\n      var filters = currentBlock.f\n      var name = currentBlock.n || ''\n      var params = currentBlock.p || ''\n      var res = currentBlock.res || ''\n      var blocks = currentBlock.b\n\n      if (type === 'r') {\n        if (!currentBlock.raw && env.autoEscape) {\n          content = \"c.l('F','e')(\" + content + ')'\n        }\n        var filtered = filter(content, filters)\n        returnStr += 'tR+=' + filtered + ';'\n        // reference\n      } else if (type === '~') {\n        // helper\n        // TODO: native helpers: check\n        if (nativeHelpers.get(name)) {\n          returnStr += nativeHelpers.get(name)(currentBlock, env)\n        } else {\n          var helperReturn =\n            \"c.l('H','\" +\n            name +\n            \"')(\" +\n            compileHelper(env, res, (currentBlock as ParentTemplateObject).d, params)\n          if (blocks) {\n            helperReturn += ',' + compileBlocks(blocks, env)\n          } else {\n            helperReturn += ',[]'\n          }\n          helperReturn += ',c)'\n\n          returnStr += 'tR+=' + filter(helperReturn, filters) + ';'\n        }\n      } else if (type === 's') {\n        returnStr +=\n          'tR+=' + filter(\"c.l('H','\" + name + \"')({params:[\" + params + ']},[],c)', filters) + ';'\n        // self-closing helper\n      } else if (type === '!') {\n        // execute\n        returnStr += content + ';'\n      } else if (type === '?') {\n        // custom (implement later)\n      }\n    }\n  }\n  return returnStr\n}\n\nfunction filter (str: string, filters: Array<Filter>) {\n  for (var i = 0; i < filters.length; i++) {\n    var name = filters[i][0]\n    var params = filters[i][1]\n    str = \"c.l('F','\" + name + \"')(\" + str\n    if (params) {\n      str += ',' + params\n    }\n    str += ')'\n  }\n  return str\n}\n\nexport default compileToString\n","import { helpers, filters } from './containers'\n\n/* TYPES */\n\nexport type FetcherFunction = (container: 'H' | 'F', name: string) => any\n\ntype trimConfig = 'nl' | 'slurp' | boolean\n\nexport interface SqrlConfig {\n  varName: string\n  autoTrim: trimConfig | [trimConfig, trimConfig]\n  autoEscape: boolean\n  defaultFilter: false | Function\n  tags: [string, string]\n  l: FetcherFunction\n  plugins: { processAST: Array<object>; processFuncString: Array<object> }\n  async: boolean\n  cache: boolean\n  views?: string | Array<string>\n  root?: string\n  filename?: string\n  name?: string\n  'view cache'?: boolean\n  [index: string]: any\n}\n\nexport type PartialConfig = {\n  [P in keyof SqrlConfig]?: SqrlConfig[P]\n}\n\n/* END TYPES */\n\nvar defaultConfig: SqrlConfig = {\n  varName: 'it',\n  autoTrim: [false, 'nl'],\n  autoEscape: true,\n  defaultFilter: false,\n  tags: ['{{', '}}'],\n  l: function (container: 'H' | 'F', name: string) {\n    if (container === 'H') {\n      return helpers.get(name)\n    } else if (container === 'F') {\n      return filters.get(name)\n    }\n  },\n  async: false,\n  cache: false,\n  plugins: {\n    processAST: [],\n    processFuncString: []\n  }\n}\n\nfunction getConfig (override: PartialConfig): SqrlConfig {\n  var res: SqrlConfig = {\n    varName: defaultConfig.varName,\n    autoTrim: defaultConfig.autoTrim,\n    autoEscape: defaultConfig.autoEscape,\n    defaultFilter: defaultConfig.defaultFilter,\n    tags: defaultConfig.tags,\n    l: defaultConfig.l,\n    async: defaultConfig.async,\n    cache: defaultConfig.cache,\n    plugins: defaultConfig.plugins\n  }\n\n  for (var key in override) {\n    if (override.hasOwnProperty(key)) {\n      res[key] = override[key]\n    }\n  }\n  return res\n}\n\nexport { defaultConfig, getConfig }\n\n// Have different envs. Sqrl.render, compile, etc. all use default env\n// Use class for env\n","import compileToString from './compile-string'\nimport { getConfig } from './config'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nexport type TemplateFunction = (data: object, config: SqrlConfig) => string\n\n/* END TYPES */\n\nexport default function compile (str: string, env?: PartialConfig): TemplateFunction {\n  var options: SqrlConfig = getConfig(env || {})\n  var ctor // constructor\n\n  /* ASYNC HANDLING */\n  // The below code is modified from mde/ejs. All credit should go to them.\n  if (options.async) {\n    // Have to use generated function for this, since in envs without support,\n    // it breaks in parsing\n    try {\n      ctor = new Function('return (async function(){}).constructor;')()\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        throw new Error('This environment does not support async/await')\n      } else {\n        throw e\n      }\n    }\n  } else {\n    ctor = Function\n  }\n  /* END ASYNC HANDLING */\n  return new ctor(\n    options.varName,\n    'c', // SqrlConfig\n    compileToString(str, options)\n  ) as TemplateFunction // eslint-disable-line no-new-func\n}\n\n// console.log(Compile('hi {{this}} hey', '{{', '}}').toString())\n","import Compile from './compile'\nimport { getConfig } from './config'\nimport { templates } from './containers'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nimport { TemplateFunction } from './compile'\ntype CallbackFn = (err: Error | null, str?: string) => void\n\n/* END TYPES */\n\nfunction Render (template: string | TemplateFunction, data: object, env?: PartialConfig) {\n  var options = getConfig(env || {})\n  var templateFunc\n\n  if (options.cache && options.name && templates.get(options.name)) {\n    return templates.get(options.name)(data, options)\n  }\n\n  if (typeof template === 'function') {\n    templateFunc = template\n  } else {\n    templateFunc = Compile(template, options)\n  }\n\n  if (options.cache && options.name) {\n    templates.define(options.name, templateFunc)\n  }\n\n  return templateFunc(data, options)\n}\n\nexport default Render\n"],"names":["SqrlErr","message","obj","proto","err","Error","prototype","Object","setPrototypeOf","__proto__","ParseErr","str","indx","whitespace","slice","split","lineNo","length","colNo","Array","join","parse","env","powerchars","RegExp","tags","tagOpenReg","startInd","trimNextLeftWs","parseTag","m","currentObj","f","numParens","firstChar","currentAttribute","currentType","addAttrValue","valUnprocessed","val","trim","raw","push","found","search","lastIndex","exec","char","tagClose","slash","wsControl","i","index","t","parseContext","parentObj","firstParse","b","d","tagOpenMatch","lastBlock","buffer","pushString","strng","shouldTrimRightPrecedingString","stringToPush","replace","wsLeft","wsRight","leftTrim","rightTrim","autoTrim","isArray","String","trimLeft","trimRight","trimWS","n","create","name","value","enumerable","cache","this","Cacher","key","cacheObj","hasOwnProperty","templates","helpers","each","content","res","param","params","foreach","nativeHelpers","if","returnStr","p","compileScope","currentBlock","try","escMap","&","<","\"","'","replaceChar","s","filters","e","newStr","test","compileToString","Parse","compileHelper","descendants","ret","compileScopeIntoFunction","compileBlocks","blocks","block","buff","buffLength","type","c","autoEscape","filter","get","helperReturn","defaultConfig","varName","defaultFilter","l","container","async","plugins","processAST","processFuncString","getConfig","override","compile","ctor","options","Function","SyntaxError","template","data","templateFunc","Compile","define"],"mappings":"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"}