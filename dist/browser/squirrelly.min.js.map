{"version":3,"file":"squirrelly.min.js","sources":["../../src/err.ts","../../src/utils.ts","../../src/parse.ts","../../src/storage.ts","../../src/containers.ts","../../src/compile-string.ts","../../src/config.ts","../../src/compile.ts","../../src/render.ts"],"sourcesContent":["// v 1.0.32\n\nfunction setPrototypeOf (obj: any, proto: any) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\nexport default function SqrlErr (message: string): Error {\n  var err = new Error(message)\n  setPrototypeOf(err, SqrlErr.prototype)\n  return err\n}\n\nSqrlErr.prototype = Object.create(Error.prototype, {\n  name: { value: 'Squirrelly Error', enumerable: false }\n})\n\n// TODO: Class transpilation adds a lot to the bundle size\n\nexport function ParseErr (message: string, str: string, indx: number) {\n  var whitespace = str\n    .slice(0, indx) // +2 because of {{\n    .split(/\\n/)\n\n  // console.log('whitespace: \\n' + JSON.stringify(whitespace))\n  var lineNo = whitespace.length\n  var colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    ' at line ' +\n    lineNo +\n    ' col ' +\n    colNo +\n    ':\\n\\n' +\n    '  ' +\n    str.split(/\\n/)[lineNo - 1] +\n    '\\n' +\n    '  ' +\n    Array(colNo).join(' ') +\n    '^'\n  throw SqrlErr(message)\n}\n","// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\ninterface SomeObj {\n  [key: string]: any\n}\n\n/* END TYPES */\n\nexport var promiseImpl = new Function('return this;')().Promise\n\nfunction trimWS (str: string, env: SqrlConfig, wsLeft: string, wsRight?: string): string {\n  var leftTrim\n  var rightTrim\n\n  if (typeof env.autoTrim === 'string') {\n    leftTrim = rightTrim = env.autoTrim\n  } else if (Array.isArray(env.autoTrim)) {\n    // kinda confusing\n    // but _}} will trim the left side of the following string\n    leftTrim = env.autoTrim[1]\n    rightTrim = env.autoTrim[0]\n  }\n\n  if (wsLeft) {\n    leftTrim = wsLeft\n  }\n\n  if (wsRight) {\n    rightTrim = wsRight\n  }\n\n  if (\n    (leftTrim === 'slurp' && rightTrim === 'slurp') ||\n    (leftTrim === true && rightTrim === true)\n  ) {\n    return str.trim()\n  }\n\n  if (leftTrim === '_' || leftTrim === 'slurp' || leftTrim === true) {\n    // console.log('trimming left' + leftTrim)\n    // full slurp\n    if (String.prototype.trimLeft) {\n      str = str.trimLeft()\n    } else {\n      str = str.replace(/^[\\s\\uFEFF\\xA0]+/, '')\n    }\n  } else if (leftTrim === '-' || leftTrim === 'nl') {\n    // console.log('trimming left nl' + leftTrim)\n    // nl trim\n    str = str.replace(/^(?:\\n|\\r|\\r\\n)/, '')\n  }\n\n  if (rightTrim === '_' || rightTrim === 'slurp' || rightTrim === true) {\n    // console.log('trimming right' + rightTrim)\n    // full slurp\n    if (String.prototype.trimRight) {\n      str = str.trimRight()\n    } else {\n      str = str.replace(/[\\s\\uFEFF\\xA0]+$/, '')\n    }\n  } else if (rightTrim === '-' || rightTrim === 'nl') {\n    // console.log('trimming right nl' + rightTrim)\n    // nl trim\n    str = str.replace(/(?:\\n|\\r|\\r\\n)$/, '') // TODO: make sure this gets \\r\\n\n  }\n\n  return str\n}\n\n// Below is adapted from EJS\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\n\nfunction shallowCopy<res> (to: SomeObj, from: Partial<res>): res {\n  for (var p in from) {\n    to[p] = from[p]\n  }\n  return to as res\n}\n\nexport { trimWS, shallowCopy }\n","// Version 1.0.32\nimport SqrlErr, { ParseErr } from './err'\nimport { trimWS } from './utils'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\n\nexport type TagType = '~' | '/' | '#' | '?' | 'r' | '!' | 's'\nexport type TemplateAttribute = 'c' | 'f' | 'fp' | 'p' | 'n' | 'res' | 'err'\nexport type TemplateObjectAttribute = 'c' | 'p' | 'n' | 'res'\n\nexport type AstObject = string | TemplateObject\n\nexport type Filter = [string, string | undefined]\n\nexport interface TemplateObject {\n  n?: string\n  t?: string\n  f: Array<Filter>\n  c?: string\n  p?: string\n  res?: string\n  d?: Array<AstObject>\n  raw?: boolean\n  b?: Array<ParentTemplateObject>\n}\n\nexport interface ParentTemplateObject extends TemplateObject {\n  d: Array<AstObject>\n  b: Array<ParentTemplateObject>\n}\n\n/* END TYPES */\n\nexport default function parse (str: string, env: SqrlConfig): Array<AstObject> {\n  var powerchars = new RegExp(\n    '([|()]|=>)|' +\n    '\\'(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\\'\\\\\\\\])*?\\'|`(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\\\\\`])*?`|\"(?:\\\\\\\\[\\\\s\\\\w\"\\'\\\\\\\\`]|[^\\\\n\\\\r\"\\\\\\\\])*?\"' + // matches strings\n      '|\\\\/\\\\*[^]*?\\\\*\\\\/|((\\\\/)?(-|_)?' +\n      env.tags[1] +\n      ')',\n    'g'\n  )\n  var tagOpenReg = new RegExp('([^]*?)' + env.tags[0] + '(-|_)?\\\\s*', 'g')\n  var startInd = 0\n  var trimNextLeftWs = ''\n\n  function parseTag (): TemplateObject {\n    // console.log(JSON.stringify(match))\n    var currentObj: TemplateObject = { f: [] }\n    var numParens = 0\n    var firstChar = str[startInd]\n    var currentAttribute: TemplateAttribute = 'c' // default - Valid values: 'c'=content, 'f'=filter, 'fp'=filter params, 'p'=param, 'n'=name\n    var currentType: TagType = 'r' // Default\n    startInd += 1 // assume we're gonna skip the first character\n\n    if (firstChar === '~' || firstChar === '#' || firstChar === '/') {\n      currentAttribute = 'n'\n      currentType = firstChar\n    } else if (firstChar === '!' || firstChar === '?') {\n      // ? for custom\n      currentType = firstChar\n    } else if (firstChar === '*') {\n      currentObj.raw = true\n    } else {\n      startInd -= 1\n    }\n\n    function addAttrValue (indx: number) {\n      var valUnprocessed = str.slice(startInd, indx)\n      // console.log(valUnprocessed)\n      var val = valUnprocessed.trim()\n      if (currentAttribute === 'f') {\n        if (val === 'safe') {\n          currentObj.raw = true\n        } else {\n          currentObj.f.push([val, ''])\n        }\n      } else if (currentAttribute === 'fp') {\n        currentObj.f[currentObj.f.length - 1][1] += val\n      } else if (currentAttribute === 'err') {\n        if (val) {\n          var found = valUnprocessed.search(/\\S/)\n          ParseErr('invalid syntax', str, startInd + found)\n        }\n      } else {\n        // if (currentObj[currentAttribute]) { // TODO make sure no errs\n        //   currentObj[currentAttribute] += val\n        // } else {\n        currentObj[currentAttribute] = val\n        // }\n      }\n      startInd = indx + 1\n    }\n\n    powerchars.lastIndex = startInd\n\n    var m\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = powerchars.exec(str)) !== null) {\n      var char = m[1]\n      var tagClose = m[2]\n      var slash = m[3]\n      var wsControl = m[4]\n      var i = m.index\n\n      if (char) {\n        // Power character\n        if (char === '(') {\n          if (numParens === 0) {\n            if (currentAttribute === 'n') {\n              addAttrValue(i)\n              currentAttribute = 'p'\n            } else if (currentAttribute === 'f') {\n              addAttrValue(i)\n              currentAttribute = 'fp'\n            }\n          }\n          numParens++\n        } else if (char === ')') {\n          numParens--\n          if (numParens === 0 && currentAttribute !== 'c') {\n            // Then it's closing a filter, block, or helper\n            addAttrValue(i)\n\n            currentAttribute = 'err' // Reset the current attribute\n          }\n        } else if (numParens === 0 && char === '|') {\n          addAttrValue(i) // this should actually always be whitespace or empty\n          currentAttribute = 'f'\n        } else if (char === '=>') {\n          addAttrValue(i)\n          startInd += 1 // this is 2 chars\n          currentAttribute = 'res'\n        }\n      } else if (tagClose) {\n        addAttrValue(i)\n        startInd = i + m[0].length\n        tagOpenReg.lastIndex = startInd\n        // console.log('tagClose: ' + startInd)\n        trimNextLeftWs = wsControl\n        if (slash && currentType === '~') {\n          currentType = 's'\n        } // TODO throw err\n        currentObj.t = currentType\n        return currentObj\n      }\n    }\n    // TODO: Do I need this?\n    ParseErr('unclosed tag', str, str.length)\n    return currentObj // To prevent TypeScript from erroring\n  }\n\n  function parseContext (parentObj: TemplateObject, firstParse?: boolean): ParentTemplateObject {\n    parentObj.b = [] // assume there will be blocks // TODO: perf optimize this\n    parentObj.d = []\n    var lastBlock: ParentTemplateObject | false = false\n    var buffer: Array<AstObject> = []\n\n    function pushString (strng: string, shouldTrimRightPrecedingString?: string) {\n      if (strng) {\n        var stringToPush = strng.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\")\n        stringToPush = trimWS(stringToPush, env, trimNextLeftWs, shouldTrimRightPrecedingString)\n\n        if (stringToPush) {\n          buffer.push(stringToPush)\n        }\n      }\n    }\n\n    // Random TODO: parentObj.b doesn't need to have t: #\n    var tagOpenMatch\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((tagOpenMatch = tagOpenReg.exec(str)) !== null) {\n      var precedingString = tagOpenMatch[1]\n      var shouldTrimRightPrecedingString = tagOpenMatch[2]\n\n      pushString(precedingString, shouldTrimRightPrecedingString)\n      startInd = tagOpenMatch.index + tagOpenMatch[0].length\n\n      var currentObj = parseTag()\n      // ===== NOW ADD THE OBJECT TO OUR BUFFER =====\n\n      var currentType = currentObj.t\n      if (currentType === '~') {\n        currentObj = parseContext(currentObj) // currentObj is the parent object\n        buffer.push(currentObj)\n      } else if (currentType === '/') {\n        if (parentObj.n === currentObj.n) {\n          if (lastBlock) {\n            // If there's a previous block\n            lastBlock.d = buffer\n            parentObj.b.push(lastBlock)\n          } else {\n            parentObj.d = buffer\n          }\n          // console.log('parentObj: ' + JSON.stringify(parentObj))\n          return parentObj as ParentTemplateObject\n        } else {\n          ParseErr(\n            \"Helper start and end don't match\",\n            str,\n            tagOpenMatch.index + tagOpenMatch[0].length\n          )\n        }\n      } else if (currentType === '#') {\n        if (lastBlock) {\n          // If there's a previous block\n          lastBlock.d = buffer\n          parentObj.b.push(lastBlock)\n        } else {\n          parentObj.d = buffer\n        }\n        lastBlock = currentObj as ParentTemplateObject // Set the 'lastBlock' object to the value of the current block\n\n        buffer = []\n      } else {\n        buffer.push(currentObj)\n      }\n      // ===== DONE ADDING OBJECT TO BUFFER =====\n    }\n\n    if (firstParse) {\n      // TODO: more intuitive\n      pushString(str.slice(startInd, str.length))\n      parentObj.d = buffer\n    } else {\n      throw SqrlErr('unclosed helper \"' + parentObj.n + '\"')\n      // It should have returned by now\n    }\n\n    return parentObj as ParentTemplateObject\n  }\n\n  var parseResult = parseContext({ f: [] }, true)\n  // console.log(JSON.stringify(parseResult))\n  return parseResult.d // Parse the very outside context\n}\n","/* TYPES */\n\ninterface ICache<T> {\n  // Basically, an object where all keys point to a value of the same type\n  [key: string]: T\n}\n\n/* END TYPES */\n\nclass Cacher<T> {\n  constructor (private cache: ICache<T>) {}\n  define (key: string, val: T) {\n    this.cache[key] = val\n  }\n  get (key: string) {\n    // string | array.\n    // TODO: allow array of keys to look down\n    // TODO: create plugin to allow referencing helpers, filters with dot notation\n    return this.cache[key]\n  }\n  remove (key: string) {\n    delete this.cache[key]\n  }\n  reset () {\n    this.cache = {}\n  }\n  load (cacheObj: ICache<T>) {\n    for (var key in cacheObj) {\n      if (cacheObj.hasOwnProperty(key)) {\n        this.cache[key] = cacheObj[key]\n      }\n    }\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from './storage'\nimport SqrlErr from './err'\nimport { compileScope } from './compile-string'\n// interface ITemplate {\n//   exec: (options: object, Sqrl: object) => string\n// }\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { ParentTemplateObject } from './parse'\n\nexport interface HelperBlock {\n  exec: Function\n  params: Array<any>\n}\nexport type HelperFunction = (\n  content: HelperBlock,\n  blocks: Array<HelperBlock>,\n  config: SqrlConfig\n) => string\n\ntype FilterFunction = (str: string) => string\n\ninterface EscapeMap {\n  '&': '&amp;'\n  '<': '&lt;'\n  '\"': '&quot;'\n  \"'\": '&#39;'\n  [index: string]: string\n}\n\ninterface IncludeHelperBlock extends HelperBlock {\n  params: [string, object]\n}\n\n/* END TYPES */\n\nvar templates = new Cacher<TemplateFunction>({})\n\nvar helpers = new Cacher<HelperFunction>({\n  each: function (content: HelperBlock) {\n    // helperStart is called with (params, id) but id isn't needed\n    var res = ''\n    var param = content.params[0]\n    for (var i = 0; i < param.length; i++) {\n      res += content.exec(param[i], i)\n    }\n    return res\n  },\n  foreach: function (content: HelperBlock) {\n    var res = ''\n    var param = content.params[0]\n    for (var key in param) {\n      if (!param.hasOwnProperty(key)) continue\n      res += content.exec(key, param[key]) // todo: I think this is wrong?\n    }\n    return res\n  },\n  include: function (\n    content: IncludeHelperBlock,\n    blocks: Array<HelperBlock>,\n    config: SqrlConfig\n  ): string {\n    // helperStart is called with (params, id) but id isn't needed\n    if (blocks && blocks.length > 0) {\n      throw SqrlErr(\"Helper 'include' doesn't accept blocks\")\n    }\n    var template = templates.get(content.params[0])\n    if (!template) {\n      throw SqrlErr('Could not fetch template \"' + content.params[0] + '\"')\n    }\n    return template(content.params[1], config)\n  } as HelperFunction\n})\n\nvar nativeHelpers = new Cacher<Function>({\n  if: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    if (buffer.f && buffer.f.length) {\n      throw SqrlErr(\"native helper 'if' can't have filters\")\n    }\n    var returnStr = 'if(' + buffer.p + '){' + compileScope(buffer.d, env) + '}'\n    if (buffer.b) {\n      for (var i = 0; i < buffer.b.length; i++) {\n        var currentBlock = buffer.b[i]\n        if (currentBlock.n === 'else') {\n          returnStr += 'else{' + compileScope(currentBlock.d, env) + '}'\n        } else if (currentBlock.n === 'elif') {\n          returnStr += 'else if(' + currentBlock.p + '){' + compileScope(currentBlock.d, env) + '}'\n        }\n      }\n    }\n    return returnStr\n  },\n  try: function (buffer: ParentTemplateObject, env: SqrlConfig) {\n    if (buffer.f && buffer.f.length) {\n      throw SqrlErr(\"native helper 'try' can't have filters\")\n    }\n    if (!buffer.b || buffer.b.length !== 1 || buffer.b[0].n !== 'catch') {\n      throw SqrlErr(\"native helper 'try' only accepts 1 block, 'catch'\")\n    }\n    var returnStr = 'try{' + compileScope(buffer.d, env) + '}'\n\n    var currentBlock = buffer.b[0]\n    returnStr +=\n      'catch' +\n      (currentBlock.res ? '(' + currentBlock.res + ')' : '') +\n      '{' +\n      compileScope(currentBlock.d, env) +\n      '}'\n\n    return returnStr\n  }\n})\n\nvar escMap: EscapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s: string): string {\n  return escMap[s]\n}\n\nfunction XMLEscape (str: any) {\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  var newStr = String(str)\n  if (/[&<\"']/.test(newStr)) {\n    return newStr.replace(/[&<\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nvar filters = new Cacher<FilterFunction>({ e: XMLEscape })\n\nexport { templates, helpers, nativeHelpers, filters }\n","import Parse from './parse'\nimport { nativeHelpers } from './containers'\n\n/* TYPES */\n\nimport { SqrlConfig } from './config'\nimport { AstObject, Filter, ParentTemplateObject } from './parse'\n\n/* END TYPES */\n\nexport default function compileToString (str: string, env: SqrlConfig) {\n  var buffer: Array<AstObject> = Parse(str, env)\n\n  return (\n    \"var tR='';\" +\n    compileScope(buffer, env)\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r') +\n    'if(cb){return cb(null,tR)} return tR'\n  )\n\n  // TODO: is `return cb()` necessary, or could we just do `cb()`\n}\n\n// TODO: Use type intersections for TemplateObject, etc.\n// so I don't have to make properties mandatory\n\nfunction compileHelper (\n  env: SqrlConfig,\n  res: string,\n  descendants: Array<AstObject>,\n  params: string,\n  name?: string\n) {\n  var ret =\n    '{exec:' +\n    (env.async ? 'async ' : '') +\n    compileScopeIntoFunction(descendants, res, env) +\n    ',params:[' +\n    params +\n    ']'\n  if (name) {\n    ret += \",name:'\" + name + \"'\"\n  }\n  ret += '}'\n  return ret\n}\n\nfunction compileBlocks (blocks: Array<ParentTemplateObject>, env: SqrlConfig) {\n  var ret = '['\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i]\n    ret += compileHelper(env, block.res || '', block.d, block.p || '', block.n)\n    if (i < blocks.length) {\n      ret += ','\n    }\n  }\n  ret += ']'\n  return ret\n}\n\nexport function compileScopeIntoFunction (buff: Array<AstObject>, res: string, env: SqrlConfig) {\n  return 'function(' + res + \"){var tR='';\" + compileScope(buff, env) + 'return tR}'\n}\n\nexport function compileScope (buff: Array<AstObject>, env: SqrlConfig) {\n  var i = 0\n  var buffLength = buff.length\n  var returnStr = ''\n\n  for (i; i < buffLength; i++) {\n    var currentBlock = buff[i]\n    if (typeof currentBlock === 'string') {\n      var str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str + \"';\"\n    } else {\n      var type = currentBlock.t // ~, s, !, ?, r\n      var content = currentBlock.c || ''\n      var filters = currentBlock.f\n      var name = currentBlock.n || ''\n      var params = currentBlock.p || ''\n      var res = currentBlock.res || ''\n      var blocks = currentBlock.b\n\n      if (type === 'r') {\n        if (!currentBlock.raw && env.autoEscape) {\n          content = \"c.l('F','e')(\" + content + ')'\n        }\n        var filtered = filter(content, filters, env)\n        returnStr += 'tR+=' + filtered + ';'\n        // reference\n      } else if (type === '~') {\n        // helper\n        // TODO: native helpers: check\n        if (nativeHelpers.get(name)) {\n          returnStr += nativeHelpers.get(name)(currentBlock, env)\n        } else {\n          var helperReturn =\n            (env.async && env.asyncHelpers && env.asyncHelpers.includes(name) ? 'await ' : '') +\n            \"c.l('H','\" +\n            name +\n            \"')(\" +\n            compileHelper(env, res, (currentBlock as ParentTemplateObject).d, params)\n          if (blocks) {\n            helperReturn += ',' + compileBlocks(blocks, env)\n          } else {\n            helperReturn += ',[]'\n          }\n          helperReturn += ',c)'\n\n          returnStr += 'tR+=' + filter(helperReturn, filters, env) + ';'\n        }\n      } else if (type === 's') {\n        returnStr +=\n          'tR+=' +\n          filter(\n            (env.async && env.asyncHelpers && env.asyncHelpers.includes(name) ? 'await ' : '') +\n              \"c.l('H','\" +\n              name +\n              \"')({params:[\" +\n              params +\n              ']},[],c)',\n            filters,\n            env\n          ) +\n          ';'\n        // self-closing helper\n      } else if (type === '!') {\n        // execute\n        returnStr += content + ';'\n      } else if (type === '?') {\n        // custom (implement later)\n      }\n    }\n  }\n  return returnStr\n}\n\nfunction filter (str: string, filters: Array<Filter>, env: SqrlConfig) {\n  for (var i = 0; i < filters.length; i++) {\n    var name = filters[i][0]\n    var params = filters[i][1]\n    if (env.async) {\n      if (env.asyncFilters && env.asyncFilters.includes(name)) {\n        str = 'await ' + str\n      }\n    }\n    str = \"c.l('F','\" + name + \"')(\" + str\n    if (params) {\n      str += ',' + params\n    }\n    str += ')'\n  }\n  return str\n}\n","import { helpers, filters } from './containers'\n\n/* TYPES */\n\nexport type FetcherFunction = (container: 'H' | 'F', name: string) => any\n\ntype trimConfig = 'nl' | 'slurp' | boolean\n\nexport interface SqrlConfig {\n  varName: string\n  autoTrim: trimConfig | [trimConfig, trimConfig]\n  autoEscape: boolean\n  defaultFilter: false | Function\n  tags: [string, string]\n  l: FetcherFunction\n  plugins: { processAST: Array<object>; processFuncString: Array<object> }\n  async: boolean\n  asyncFilters?: Array<string>\n  asyncHelpers?: Array<string>\n  cache: boolean\n  views?: string | Array<string>\n  root?: string\n  filename?: string\n  name?: string\n  'view cache'?: boolean\n  [index: string]: any\n}\n\nexport type PartialConfig = {\n  [P in keyof SqrlConfig]?: SqrlConfig[P]\n}\n\n/* END TYPES */\n\nvar defaultConfig: SqrlConfig = {\n  varName: 'it',\n  autoTrim: [false, 'nl'],\n  autoEscape: true,\n  defaultFilter: false,\n  tags: ['{{', '}}'],\n  l: function (container: 'H' | 'F', name: string) {\n    if (container === 'H') {\n      return helpers.get(name)\n    } else if (container === 'F') {\n      return filters.get(name)\n    }\n  },\n  async: false,\n  asyncHelpers: ['include', 'includeFile'],\n  cache: false,\n  plugins: {\n    processAST: [],\n    processFuncString: []\n  }\n}\n\nfunction getConfig (override: PartialConfig, baseConfig?: SqrlConfig): SqrlConfig {\n  var res: SqrlConfig = {\n    varName: defaultConfig.varName,\n    autoTrim: defaultConfig.autoTrim,\n    autoEscape: defaultConfig.autoEscape,\n    defaultFilter: defaultConfig.defaultFilter,\n    tags: defaultConfig.tags,\n    l: defaultConfig.l,\n    async: defaultConfig.async,\n    cache: defaultConfig.cache,\n    plugins: defaultConfig.plugins\n  }\n\n  if (baseConfig) {\n    for (var key in baseConfig) {\n      if (baseConfig.hasOwnProperty(key)) {\n        res[key] = baseConfig[key]\n      }\n    }\n  }\n\n  if (override) {\n    for (var key in override) {\n      if (override.hasOwnProperty(key)) {\n        res[key] = override[key]\n      }\n    }\n  }\n\n  return res\n}\n\nexport { defaultConfig, getConfig }\n\n// Have different envs. Sqrl.render, compile, etc. all use default env\n// Use class for env\n","import compileToString from './compile-string'\nimport { getConfig } from './config'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nimport { CallbackFn } from './file-handlers'\nexport type TemplateFunction = (data: object, config: SqrlConfig, cb?: CallbackFn) => string\n\n/* END TYPES */\n\nexport default function compile (str: string, env?: PartialConfig): TemplateFunction {\n  var options: SqrlConfig = getConfig(env || {})\n  var ctor // constructor\n\n  /* ASYNC HANDLING */\n  // The below code is modified from mde/ejs. All credit should go to them.\n  if (options.async) {\n    // Have to use generated function for this, since in envs without support,\n    // it breaks in parsing\n    try {\n      ctor = new Function('return (async function(){}).constructor;')()\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        throw new Error('This environment does not support async/await')\n      } else {\n        throw e\n      }\n    }\n  } else {\n    ctor = Function\n  }\n  /* END ASYNC HANDLING */\n  return new ctor(\n    options.varName,\n    'c', // SqrlConfig\n    'cb', // optional callback\n    compileToString(str, options)\n  ) as TemplateFunction // eslint-disable-line no-new-func\n}\n\n// console.log(Compile('hi {{this}} hey', '{{', '}}').toString())\n","import compile from './compile'\nimport { getConfig } from './config'\nimport { templates } from './containers'\nimport { promiseImpl } from './utils'\nimport SqrlErr from './err'\n\n/* TYPES */\n\nimport { SqrlConfig, PartialConfig } from './config'\nimport { TemplateFunction } from './compile'\nimport { CallbackFn } from './file-handlers'\n\n/* END TYPES */\n\nexport default function render (\n  template: string | TemplateFunction,\n  data: object,\n  env?: PartialConfig,\n  cb?: CallbackFn\n) {\n  var options = getConfig(env || {})\n\n  if (options.async) {\n    var result\n    if (!cb) {\n      // No callback, try returning a promise\n      if (typeof promiseImpl == 'function') {\n        return new promiseImpl(function (resolve: Function, reject: Function) {\n          try {\n            result = handleCache(template, options)(data, options)\n            resolve(result)\n          } catch (err) {\n            reject(err)\n          }\n        })\n      } else {\n        throw SqrlErr(\"Please provide a callback function, this env doesn't support Promises\")\n      }\n    } else {\n      try {\n        handleCache(template, options)(data, options, cb)\n      } catch (err) {\n        return cb(err)\n      }\n    }\n  } else {\n    return handleCache(template, options)(data, options)\n  }\n}\n\nfunction handleCache (template: string | TemplateFunction, options: SqrlConfig): TemplateFunction {\n  var templateFunc\n\n  if (options.cache && options.name && templates.get(options.name)) {\n    return templates.get(options.name)\n  }\n\n  if (typeof template === 'function') {\n    templateFunc = template\n  } else {\n    templateFunc = compile(template, options)\n  }\n\n  if (options.cache && options.name) {\n    templates.define(options.name, templateFunc)\n  }\n\n  return templateFunc\n}\n"],"names":["SqrlErr","message","obj","proto","err","Error","prototype","Object","setPrototypeOf","__proto__","ParseErr","str","indx","whitespace","slice","split","lineNo","length","colNo","Array","join","create","name","value","enumerable","promiseImpl","Function","Promise","parse","env","powerchars","RegExp","tags","tagOpenReg","startInd","trimNextLeftWs","parseTag","m","currentObj","f","numParens","firstChar","currentAttribute","currentType","addAttrValue","valUnprocessed","val","trim","raw","push","found","search","lastIndex","exec","char","tagClose","slash","wsControl","i","index","t","parseContext","parentObj","firstParse","b","d","tagOpenMatch","lastBlock","buffer","pushString","strng","shouldTrimRightPrecedingString","stringToPush","replace","wsLeft","wsRight","leftTrim","rightTrim","autoTrim","isArray","String","trimLeft","trimRight","trimWS","n","cache","this","Cacher","key","cacheObj","hasOwnProperty","templates","helpers","each","content","res","param","params","foreach","include","blocks","config","template","get","nativeHelpers","if","returnStr","p","compileScope","currentBlock","try","escMap","&","<","\"","'","replaceChar","s","filters","e","newStr","test","compileToString","Parse","compileHelper","descendants","ret","async","compileScopeIntoFunction","compileBlocks","block","buff","buffLength","type","c","autoEscape","filter","helperReturn","asyncHelpers","includes","asyncFilters","defaultConfig","varName","defaultFilter","l","container","plugins","processAST","processFuncString","getConfig","override","baseConfig","compile","ctor","options","SyntaxError","handleCache","templateFunc","define","data","cb","resolve","reject"],"mappings":"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"}