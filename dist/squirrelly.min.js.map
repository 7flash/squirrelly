{"version":3,"file":"squirrelly.min.js","sources":["../src/helpers.js","../src/partials.js","../src/regexps.js","../src/nativeHelpers.js","../src/filters.js","../src/compile.js","../src/utils.js"],"sourcesContent":["var helpers = {\r\n// No helpers are included by default for the sake of size,\r\n// But there's an example of a helper below\r\n/*\r\n  Date: function (args, content, blocks, options) {\r\n    var today = new Date()\r\n    var dd = today.getDate()\r\n    var mm = today.getMonth() + 1 // January is 0!\r\n    var yyyy = today.getFullYear()\r\n    if (dd < 10) {\r\n      dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n      mm = '0' + mm\r\n    }\r\n    today = mm + '/' + dd + '/' + yyyy\r\n    return today\r\n  } */\r\n}\r\n\r\nexport default helpers\r\n","var Partials = {/*\r\n    partialName: \"partialString\"\r\n*/}\r\n\r\nexport default Partials\r\n","export var initialRegEx = /{{ *?(?:(?:([\\w$]+) *?\\((.*?)\\) *?([\\w$]*))|(?:([\\w$]+) *?\\((.*?)\\) *?\\/)|(?:([\\w$@].*?) *?((?:\\| *?[\\w$]+ *)*))|(?:\\/ *?([\\w$]+))|(?:# *?([\\w$]+))|(?:!--[^]+?--)) *?}}\\n?/g\r\nexport var initialTags = {\r\n  s: '{{',\r\n  e: '}}'\r\n}\r\n\r\n// The regExp below matches all helper references inside helper parameters\r\nvar paramHelperRefRegExp = /@(?:((?:\\.\\.\\/)+)|([\\w$]+):)?/g\r\n\r\nexport var regEx = initialRegEx\r\nexport var tags = initialTags\r\n\r\nexport function setup () {\r\n  // Resets the current tags to the default tags\r\n  tags = initialTags\r\n  regEx = initialRegEx\r\n  regEx.lastIndex = 0\r\n}\r\n\r\nexport function defaultTags (tagArray) {\r\n  // Redefine the default tags of the regexp\r\n  changeTags(tagArray[0], tagArray[1])\r\n  initialRegEx = regEx\r\n  initialTags = tags\r\n}\r\n\r\nexport function changeTags (firstTag, secondTag) {\r\n  // Update current tags\r\n  var newRegEx =\r\n    firstTag +\r\n    regEx.source.slice(tags.s.length, 0 - (tags.e.length + 3)) +\r\n    secondTag +\r\n    '\\\\n?'\r\n  var lastIndex = regEx.lastIndex\r\n  tags = {\r\n    s: firstTag,\r\n    e: secondTag\r\n  }\r\n  regEx = RegExp(newRegEx, 'g')\r\n  regEx.lastIndex = lastIndex\r\n}\r\n\r\nexport function replaceHelperRefs (str, helperArray, helperNumber) {\r\n  return str.replace(paramHelperRefRegExp, function (m, scope, id) {\r\n    var suffix\r\n    if (scope && scope.length) {\r\n      suffix = helperArray[helperNumber - scope.length / 3 - 1].id\r\n    } else if (id) {\r\n      suffix = id\r\n    } else {\r\n      suffix = ''\r\n    }\r\n    return 'hvals' + suffix + '.'\r\n  })\r\n}\r\n\r\n// The whole regular expression can be hard to comprehend, so here it's broken down.\r\n// You can pass the string between \"START REGEXP\" and \"END REGEXP\" into a regular expression\r\n// That removes whitespace and comments, and outputs a working regular expression.\r\n\r\n/* START REGEXP\r\n{{ *? //the beginning\r\n(?: //or for each possible tag\r\n(?:([\\w$]+) *?\\((.*?)\\) *?([\\w$]*)) //if a helper oTag\r\n| //now for a self closing tag\r\n(?:([\\w$]+) *?\\((.*?)\\) *?\\/)\r\n| //now if a ref\r\n(?: //if a global or helper ref\r\n([\\w$@].*?) *? //ref content\r\n((?:\\| *?[\\w$]+ *)*) //filters\r\n) //end if a global or helper ref\r\n| //now if a helper cTag\r\n(?:\\/ *?([\\w$]+))\r\n| //now if a helper block\r\n(?:# *?([\\w$]+))\r\n| //now for comments\r\n(?:!--[^]+?--)\r\n) //end or for each possible tag\r\n *?}}\r\n\\n? //To replace a newline at the end of a line\r\n\r\nEND REGEXP */\r\n/*\r\np1: helper start name\r\np2: helper start params\r\np3: helper start id\r\np4: self-closing helper name\r\np5: self-closing helper params\r\np6: ref content\r\np7: ref filters\r\np8: helper close name\r\np9: helper block name\r\nHere's the RegExp I use to turn the expanded version between START REGEXP and END REGEXP to a working one: I replace [^\\S ]+| \\/\\/[\\w ']+\\n with \"\".\r\n*/\r\n","import { changeTags } from './regexps'\r\nvar nativeHelpers = {\r\n  if: {\r\n    helperStart: function (param) { // helperStart is called with (params, id) but id isn't needed\r\n      return 'if(' + param + '){'\r\n    },\r\n    helperEnd: function () {\r\n      return '}'\r\n    },\r\n    blocks: {\r\n      else: function () { // called with (id) but neither param is needed\r\n        return '}else{'\r\n      }\r\n    }\r\n  },\r\n  each: {\r\n    helperStart: function (param, id) { // helperStart is called with (params, id) but id isn't needed\r\n      return 'for(var i=0;i<' + param + \".length; i++){tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\r\n    },\r\n    helperEnd: function (param) {\r\n      return 'return tR})({this:' + param + '[i],index:i})};'\r\n    }\r\n  },\r\n  foreach: {\r\n    helperStart: function (param, id) {\r\n      return 'for(var key in ' + param + '){if(!' + param + \".hasOwnProperty(key)) continue;tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\r\n    },\r\n    helperEnd: function (param) {\r\n      return 'return tR})({this:' + param + '[key], key: key})};'\r\n    }\r\n  },\r\n  log: {\r\n    selfClosing: function (param) {\r\n      return 'console.log(' + param + ');'\r\n    }\r\n  },\r\n  tags: {\r\n    selfClosing: function (param) {\r\n      var firstTag = param.slice(0, param.indexOf(',')).trim()\r\n      var secondTag = param.slice(param.indexOf(',') + 1).trim()\r\n      changeTags(firstTag, secondTag)\r\n      return ''\r\n    }\r\n  },\r\n  js: { // The js self-closing helper allows you to inject JavaScript straight into your template function\r\n    selfClosing: function (param) {\r\n      return param + ';'\r\n    }\r\n  }\r\n}\r\n\r\nexport default nativeHelpers\r\n","var escMap = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '\"': '&quot;',\r\n  \"'\": '&#39;'\r\n}\r\n\r\nfunction replaceChar (s) {\r\n  return escMap[s]\r\n}\r\n\r\nvar escapeRegEx = /[&<\"']/g\r\nvar escapeRegExTest = /[&<\"']/\r\n\r\nexport var filters = {\r\n  e: function (str) {\r\n    // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\r\n    var newStr = String(str)\r\n    if (escapeRegExTest.test(newStr)) {\r\n      return newStr.replace(escapeRegEx, replaceChar)\r\n    } else {\r\n      return newStr\r\n    }\r\n  }\r\n}\r\n// Don't need a filter for unescape because that's just a flag telling Squirrelly not to escape\r\n\r\nexport var defaultFilters = {\r\n  /*\r\n  All strings are automatically passed through each of the default filters the user\r\n  Has set to true. This opens up a realm of possibilities.\r\n  */\r\n  // somefilter: false\r\n}\r\n\r\nexport var defaultFilterCache = {\r\n  // This is to prevent having to re-calculate default filters every time you return a filtered string\r\n  start: '',\r\n  end: ''\r\n}\r\n\r\nexport function setDefaultFilters (obj) {\r\n  if (obj === 'clear') { // If someone calls Sqrl.setDefaultFilters('clear') it clears all default filters\r\n    defaultFilters = {}\r\n  } else {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        defaultFilters[key] = obj[key]\r\n      }\r\n    }\r\n  }\r\n  cacheDefaultFilters()\r\n}\r\n\r\nexport var autoEscape = true\r\n\r\nexport function autoEscaping (bool) {\r\n  autoEscape = bool\r\n  return autoEscape\r\n}\r\n\r\nexport function cacheDefaultFilters () {\r\n  defaultFilterCache = {\r\n    start: '',\r\n    end: ''\r\n  }\r\n  for (var key in defaultFilters) {\r\n    if (!defaultFilters.hasOwnProperty(key) || !defaultFilters[key]) continue\r\n    defaultFilterCache.start += 'Sqrl.F.' + key + '('\r\n    defaultFilterCache.end += ')'\r\n  }\r\n}\r\nexport function parseFiltered (initialString, filterString) {\r\n  var filtersArray\r\n  var safe = false\r\n  var filterStart = ''\r\n  var filterEnd = ''\r\n  if (filterString && filterString !== '') {\r\n    filtersArray = filterString.split('|')\r\n    for (var i = 0; i < filtersArray.length; i++) {\r\n      filtersArray[i] = filtersArray[i].trim() // Removing the spaces just in case someone put | filter| or | filter | or something similar\r\n      if (filtersArray[i] === '') continue\r\n      if (filtersArray[i] === 'safe') {\r\n        // If 'safe' is one of the filters, set safe to true but don't add Sqrl.F.safe\r\n        // Essentially, 'safe' is a flag telling Squirrelly not to autoEscape\r\n        safe = true\r\n        continue\r\n      }\r\n      filterStart = 'Sqrl.F.' + filtersArray[i] + '(' + filterStart\r\n      filterEnd += ')'\r\n    }\r\n  }\r\n  filterStart += defaultFilterCache.start\r\n  filterEnd += defaultFilterCache.end\r\n  if (!safe && autoEscape) {\r\n    filterStart += 'Sqrl.F.e('\r\n    filterEnd += ')'\r\n  }\r\n\r\n  return filterStart + initialString + filterEnd\r\n}\r\n\r\nfunction defineFilter (name, callback) {\r\n  filters[name] = callback\r\n}\r\n\r\nexport { filters as default, defineFilter }\r\n","import { regEx, setup, replaceHelperRefs } from './regexps'\r\nimport nativeHelpers from './nativeHelpers'\r\nimport { parseFiltered } from './filters'\r\nimport P from './partials'\r\n\r\nfunction Compile (str) {\r\n  var lastIndex = 0 // Because lastIndex can be complicated, and this way the minifier can minify more\r\n  var funcStr = \"var tR='';\" // This will be called with Function() and returned\r\n  var helperArray = [] // A list of all 'outstanding' helpers, or unclosed helpers\r\n  var helperNumber = -1\r\n  var helperAutoId = 0 // Squirrelly automatically generates an ID for helpers that don't have a custom ID\r\n  var helperContainsBlocks = {} // If a helper contains any blocks, helperContainsBlocks[helperID] will be set to true\r\n  var m\r\n\r\n  function addString (indx) {\r\n    if (lastIndex !== indx) {\r\n      funcStr +=\r\n        \"tR+='\" +\r\n        str\r\n          .slice(lastIndex, indx)\r\n          .replace(/\\\\/g, '\\\\\\\\')\r\n          .replace(/'/g, \"\\\\'\") +\r\n        \"';\"\r\n    }\r\n  }\r\n  function ref (content, filters) {\r\n    // console.log('refcontent: ' + content)\r\n    // console.log('filters: ' + filters)\r\n    var replaced = replaceHelperRefs(content, helperArray, helperNumber)\r\n\r\n    if (content[0] === '@') {\r\n      return parseFiltered(replaced, filters)\r\n    }\r\n    return parseFiltered('options.' + replaced, filters)\r\n  }\r\n\r\n  setup()\r\n  while ((m = regEx.exec(str)) !== null) {\r\n    addString(m.index) // Add the string between the last tag (or start of file) and the current tag\r\n    lastIndex = m[0].length + m.index\r\n\r\n    if (m[1]) {\r\n      // helper start. m[1] = helpername, m[2] = helper params, m[3] = id\r\n      var id = m[3]\r\n      if (id === '' || id === null) {\r\n        id = helperAutoId\r\n        helperAutoId++\r\n      }\r\n      var native = nativeHelpers.hasOwnProperty(m[1]) // true or false\r\n      helperNumber += 1\r\n      var params = m[2] || ''\r\n      params = replaceHelperRefs(params, helperArray, helperNumber)\r\n      // console.log(params)\r\n      if (!native) {\r\n        params = '[' + params + ']'\r\n      }\r\n      var helperTag = {\r\n        name: m[1],\r\n        id: id,\r\n        params: params,\r\n        native: native\r\n      }\r\n      helperArray[helperNumber] = helperTag\r\n      if (native) {\r\n        funcStr += nativeHelpers[m[1]].helperStart(params, id)\r\n        lastIndex = regEx.lastIndex // the changeTags function sets lastIndex already\r\n      } else {\r\n        funcStr +=\r\n          'tR+=Sqrl.H.' +\r\n          m[1] +\r\n          '(' +\r\n          params +\r\n          ',function(hvals){var hvals' +\r\n          id +\r\n          \"=hvals;var tR='';\"\r\n      }\r\n    } else if (m[4]) {\r\n      // self-closing helper. m[4] name, m[5] params\r\n      // It's a self-closing helper\r\n      var innerParams = m[5] || ''\r\n      innerParams = replaceHelperRefs(innerParams, helperArray, helperNumber)\r\n      if (m[4] === 'include') {\r\n        // This code literally gets the template string up to the include self-closing helper,\r\n        // adds the content of the partial, and adds the template string after the include self-closing helper\r\n        var preContent = str.slice(0, m.index)\r\n        var endContent = str.slice(m.index + m[0].length)\r\n        var partialParams = innerParams.replace(/'|\"/g, '') // So people can write {{include(mypartial)/}} or {{include('mypartial')/}}\r\n        var partialContent = P[partialParams]\r\n        str = preContent + partialContent + endContent\r\n        lastIndex = regEx.lastIndex = m.index\r\n      } else if (\r\n        nativeHelpers.hasOwnProperty(m[4]) &&\r\n        nativeHelpers[m[4]].hasOwnProperty('selfClosing')\r\n      ) {\r\n        funcStr += nativeHelpers[m[4]].selfClosing(innerParams)\r\n        lastIndex = regEx.lastIndex // changeTags sets regEx.lastIndex\r\n      } else {\r\n        funcStr += 'tR+=Sqrl.H.' + m[4] + '(' + innerParams + ');' // If it's not native, passing args to a non-native helper\r\n      }\r\n    } else if (m[6]) {\r\n      // ref. m[6] content, m[7] filters\r\n      funcStr += 'tR+=' + ref(m[6], m[7]) + ';'\r\n    } else if (m[8]) {\r\n      // helper close. m[8] name\r\n      var mostRecentHelper = helperArray[helperNumber]\r\n      if (mostRecentHelper && mostRecentHelper.name === m[8]) {\r\n        helperNumber -= 1\r\n        if (mostRecentHelper.native === true) {\r\n          funcStr += nativeHelpers[mostRecentHelper.name].helperEnd(\r\n            mostRecentHelper.params,\r\n            mostRecentHelper.id\r\n          )\r\n        } else {\r\n          if (helperContainsBlocks[mostRecentHelper.id]) {\r\n            funcStr += 'return tR}});'\r\n          } else {\r\n            funcStr += 'return tR});'\r\n          }\r\n        }\r\n      } else {\r\n        console.error(\"Helper beginning & end don't match.\")\r\n      }\r\n    } else if (m[9]) {\r\n      // helper block. m[9] name\r\n      var parent = helperArray[helperNumber]\r\n      if (parent.native) {\r\n        var nativeH = nativeHelpers[parent.name]\r\n        if (nativeH.blocks && nativeH.blocks[m[9]]) {\r\n          funcStr += nativeH.blocks[m[9]](parent.id)\r\n          lastIndex = regEx.lastIndex // Some native helpers set regEx.lastIndex\r\n        } else {\r\n          console.warn(\r\n            \"Native helper '%s' doesn't accept that block.\",\r\n            parent.name\r\n          )\r\n        }\r\n      } else {\r\n        if (!helperContainsBlocks[parent.id]) {\r\n          funcStr +=\r\n            'return tR},{' +\r\n            m[9] +\r\n            ':function(hvals){var hvals' +\r\n            parent.id +\r\n            \"=hvals;var tR='';\"\r\n          helperContainsBlocks[parent.id] = true\r\n        } else {\r\n          funcStr +=\r\n            'return tR},' +\r\n            m[9] +\r\n            ':function(hvals){var hvals' +\r\n            parent.id +\r\n            \"=hvals;var tR='';\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n  addString(str.length) // Add the string from the last tag-close to the end of the file, if there is one\r\n  funcStr += 'return tR'\r\n  var func = new Function( //eslint-disable-line\r\n    'options',\r\n    'Sqrl',\r\n    funcStr.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')\r\n  )\r\n  return func\r\n}\r\n\r\nexport default Compile\r\n","import F from './filters'\r\nimport C from './compile'\r\nimport H from './helpers'\r\nimport n from './nativeHelpers'\r\nimport P from './partials'\r\n\r\nexport function defineFilter (name, callback) {\r\n  F[name] = callback\r\n}\r\n\r\nexport function defineHelper (name, callback) {\r\n  H[name] = callback\r\n}\r\n\r\nexport function defineNativeHelper (name, obj) {\r\n  n[name] = obj\r\n}\r\n\r\nexport function Render (template, options) {\r\n  // If the template parameter is a function, call that function with (options, squirrelly stuff)\r\n  // If it's a string, first compile the string and then call the function\r\n  if (typeof template === 'function') {\r\n    return template(options, { H: H, F: F, P: P })\r\n  } else if (typeof template === 'string') {\r\n    var res = load(options, template)(options, { H: H, F: F, P: P })\r\n    return res\r\n  }\r\n}\r\n\r\nexport function definePartial (name, str) {\r\n  P[name] = str\r\n}\r\n\r\nexport var cache = {}\r\n\r\nexport function load (options, str) {\r\n  var filePath = options.$file\r\n  var name = options.$name\r\n  var caching = options.$cache\r\n\r\n  if (filePath) {\r\n    // If $file is passed in\r\n    const fs = require('fs')\r\n    if (caching !== false) {\r\n      if (!cache.hasOwnProperty(filePath)) {\r\n        cache[filePath] = C(fs.readFileSync(filePath, 'utf8'))\r\n      }\r\n      return cache[filePath]\r\n    } else {\r\n      return C(fs.readFileSync(filePath, 'utf8'))\r\n    }\r\n  } else if (str) {\r\n    // If str is passed in\r\n    if (name && caching !== false) {\r\n      if (!cache.hasOwnProperty(name)) {\r\n        cache[name] = C(str)\r\n      }\r\n      return cache[name]\r\n    } else if (caching === true) {\r\n      if (!cache.hasOwnProperty(str)) {\r\n        cache[str] = C(str)\r\n      }\r\n      return cache[str]\r\n    } else {\r\n      return C(str)\r\n    }\r\n  } else if (name && caching !== false && cache.hasOwnProperty(name)) {\r\n    // If only name is passed in and it exists in cache\r\n    return cache[name]\r\n  } else {\r\n    // Neither $file nor str nor existing name is passed in\r\n    return 'No template'\r\n  }\r\n}\r\n\r\nexport function renderFile (filePath, options) {\r\n  options.$file = filePath\r\n  return load(options)(options, { H: H, F: F, P: P })\r\n}\r\n\r\nexport function __express (filePath, options, callback) {\r\n  return callback(null, renderFile(filePath, options))\r\n}\r\n"],"names":["helpers","Partials","initialRegEx","initialTags","s","e","paramHelperRefRegExp","regEx","tags","changeTags","firstTag","secondTag","newRegEx","source","slice","length","lastIndex","RegExp","replaceHelperRefs","str","helperArray","helperNumber","replace","m","scope","id","nativeHelpers","if","helperStart","param","helperEnd","blocks","else","each","foreach","log","selfClosing","indexOf","trim","js","escMap","&","<","\"","'","replaceChar","escapeRegEx","escapeRegExTest","filters","newStr","String","test","defaultFilters","defaultFilterCache","start","end","autoEscape","parseFiltered","initialString","filterString","filtersArray","safe","filterStart","filterEnd","split","i","Compile","funcStr","helperAutoId","helperContainsBlocks","addString","indx","ref","content","replaced","exec","index","native","hasOwnProperty","params","helperTag","name","innerParams","preContent","endContent","partialParams","partialContent","P","mostRecentHelper","console","error","parent","nativeH","warn","Function","cache","load","options","filePath","$file","$name","caching","$cache","fs","require","C","readFileSync","renderFile","H","F","template","callback","bool","tagArray","obj","n","key","cacheDefaultFilters"],"mappings":"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"}