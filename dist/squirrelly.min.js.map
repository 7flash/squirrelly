{"version":3,"file":"squirrelly.min.js","sources":["../src/helpers.js","../src/partials.js","../src/regexps.js","../src/nativeHelpers.js","../src/filters.js","../src/compile.js","../src/utils.js"],"sourcesContent":["var helpers = {\n// No helpers are included by default for the sake of size,\n// But there's an example of a helper below\n/*\n  Date: function (args, content, blocks, options) {\n    var today = new Date()\n    var dd = today.getDate()\n    var mm = today.getMonth() + 1 // January is 0!\n    var yyyy = today.getFullYear()\n    if (dd < 10) {\n      dd = '0' + dd\n    }\n    if (mm < 10) {\n      mm = '0' + mm\n    }\n    today = mm + '/' + dd + '/' + yyyy\n    return today\n  } */\n}\n\nexport default helpers\n","var Partials = {/*\n    partialName: \"partialString\"\n*/}\n\nexport default Partials\n","export var initialRegEx = /{{ *?(?:(?:(?:(?:([\\w$]+ *?(?:[^\\s\\w($][^\\n]*?)*?))|(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *))(?: *?(\\| *?[\\w$]+? *?)+?)?)|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?([\\w$]*))|(?:\\/ *?([\\w$]+))|(?:# *?([\\w$]+))|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?\\/)|(?:!--[^]+?--)) *?}}\\n?/g\nexport var initialTags = {\n  s: '{{',\n  e: '}}'\n}\n\n// The regExp below matches all helper references inside helper parameters\nvar paramHelperRefRegExp = /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[\\\\]@(?:[\\w$]*:)?[\\w$]+|@(?:([\\w$]*):)?([\\w$]+)/g\n\nexport var regEx = initialRegEx\nexport var tags = initialTags\n\nexport function setup () { // Resets the current tags to the default tags\n  tags = initialTags\n  regEx = initialRegEx\n  regEx.lastIndex = 0\n}\n\nexport function defaultTags (tagArray) { // Redefine the default tags of the regexp\n  changeTags(tagArray[0], tagArray[1])\n  initialRegEx = regEx\n  initialTags = tags\n}\n\nexport function changeTags (firstTag, secondTag) { // Update current tags\n  var newRegEx = firstTag + regEx.source.slice(tags.s.length, 0 - (tags.e.length + 3)) + secondTag + '\\\\n?'\n  var lastIndex = regEx.lastIndex\n  tags = {\n    s: firstTag,\n    e: secondTag\n  }\n  regEx = RegExp(newRegEx, 'g')\n  regEx.lastIndex = lastIndex\n}\n\nexport function replaceParamHelpers (params) {\n  params = params.replace(paramHelperRefRegExp, function (m, p1, p2) { // p1 scope, p2 string\n    if (typeof p2 === 'undefined') {\n      return m\n    } else {\n      if (typeof p1 === 'undefined') {\n        p1 = ''\n      }\n      return 'hvals' + p1 + '.' + p2\n    }\n  })\n  return params\n}\n\n// The whole regular expression can be hard to comprehend, so here it's broken down.\n// You can pass the string between \"START REGEXP\" and \"END REGEXP\" into a regular expression\n// That removes whitespace and comments, and outputs a working regular expression.\n\n/* START REGEXP\n{{ *? //the beginning\n(?: //or for each possible tag\n(?: //if a global or helper ref\n(?: //choosing global or helper ref\n(?:([\\w$]+ *?(?:[^\\s\\w($][^\\n]*?)*?)) //global reference\n|\n(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *) //helper reference\n)\n(?: *?(\\| *?[\\w$]+? *?)+?)? //filter\n) //end if a global or helper ref\n| //now if a helper oTag\n(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?([\\w$]*))\n| //now if a helper cTag\n(?:\\/ *?([\\w$]+))\n| //now if a helper block\n(?:# *?([\\w$]+))\n| //now for a self closing tag\n(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?\\/)\n| //now for comments\n(?:!--[^]+?--)\n) //end or for each possible tag\n *?}}\n\\n? //To replace a newline at the end of a line\n\nEND REGEXP */\n/*\np1: global ref main\np2: helper ref id (with ':' after it) or path\np3: helper ref main\np4: filters\np5: helper name\np6: helper parameters\np7: helper id\np8: helper cTag name\np9: helper block name\np10: self closing helper name\np11: self closing helper params\nHere's the RegExp I use to turn the expanded version between START REGEXP and END REGEXP to a working one: I replace [\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]| \\/\\/[\\w ']+\\n with nothing.\n*/\n","import { changeTags } from './regexps'\nvar nativeHelpers = {\n  if: {\n    helperStart: function (param) { // helperStart is called with (params, id) but id isn't needed\n      return 'if(' + param + '){'\n    },\n    helperEnd: function () {\n      return '}'\n    },\n    blocks: {\n      else: function () { // called with (id) but neither param is needed\n        return '}else{'\n      }\n    }\n  },\n  each: {\n    helperStart: function (param, id) { // helperStart is called with (params, id) but id isn't needed\n      return 'for(var i=0;i<' + param + \".length; i++){tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\n    },\n    helperEnd: function (param) {\n      return 'return tR})({this:' + param + '[i],index:i})};'\n    }\n  },\n  foreach: {\n    helperStart: function (param, id) {\n      return 'for(var key in ' + param + '){if(!' + param + \".hasOwnProperty(key)) continue;tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\n    },\n    helperEnd: function (param) {\n      return 'return tR})({this:' + param + '[key], key: key})};'\n    }\n  },\n  log: {\n    selfClosing: function (param) {\n      return 'console.log(' + param + ');'\n    }\n  },\n  tags: {\n    selfClosing: function (param) {\n      var firstTag = param.slice(0, param.indexOf(',')).trim()\n      var secondTag = param.slice(param.indexOf(',') + 1).trim()\n      changeTags(firstTag, secondTag)\n      return ''\n    }\n  },\n  js: { // The js self-closing helper allows you to inject JavaScript straight into your template function\n    selfClosing: function (param) {\n      return param + ';'\n    }\n  }\n}\n\nexport default nativeHelpers\n","var escMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n}\n\nfunction replaceChar (s) {\n  return escMap[s]\n}\n\nvar escapeRegEx = /[&<\"']/g\nvar escapeRegExTest = /[&<\"']/\n\nexport var filters = {\n  e: function (str) {\n    // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n    var newStr = String(str)\n    if (escapeRegExTest.test(newStr)) {\n      return newStr.replace(escapeRegEx, replaceChar)\n    } else {\n      return newStr\n    }\n  }\n}\n// Don't need a filter for unescape because that's just a flag telling Squirrelly not to escape\n\nexport var defaultFilters = {\n  /*\n  All strings are automatically passed through each of the default filters the user\n  Has set to true. This opens up a realm of possibilities.\n  */\n  // somefilter: false\n}\n\nexport var defaultFilterCache = {\n  // This is to prevent having to re-calculate default filters every time you return a filtered string\n  start: '',\n  end: ''\n}\n\nexport function setDefaultFilters (obj) {\n  if (obj === 'clear') { // If someone calls Sqrl.setDefaultFilters('clear') it clears all default filters\n    defaultFilters = {}\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        defaultFilters[key] = obj[key]\n      }\n    }\n  }\n  cacheDefaultFilters()\n}\n\nexport var autoEscape = true\n\nexport function autoEscaping (bool) {\n  autoEscape = bool\n  return autoEscape\n}\n\nexport function cacheDefaultFilters () {\n  defaultFilterCache = {\n    start: '',\n    end: ''\n  }\n  for (var key in defaultFilters) {\n    if (!defaultFilters.hasOwnProperty(key) || !defaultFilters[key]) continue\n    defaultFilterCache.start += 'Sqrl.F.' + key + '('\n    defaultFilterCache.end += ')'\n  }\n}\nexport function parseFiltered (initialString, filterString) {\n  var filtersArray\n  var safe = false\n  var filterStart = ''\n  var filterEnd = ''\n  if (filterString && filterString !== '') {\n    filtersArray = filterString.split('|')\n    for (var i = 0; i < filtersArray.length; i++) {\n      filtersArray[i] = filtersArray[i].trim() // Removing the spaces just in case someone put | filter| or | filter | or something similar\n      if (filtersArray[i] === '') continue\n      if (filtersArray[i] === 'safe') {\n        // If 'safe' is one of the filters, set safe to true but don't add Sqrl.F.safe\n        // Essentially, 'safe' is a flag telling Squirrelly not to autoEscape\n        safe = true\n        continue\n      }\n      filterStart = 'Sqrl.F.' + filtersArray[i] + '(' + filterStart\n      filterEnd += ')'\n    }\n  }\n  filterStart += defaultFilterCache.start\n  filterEnd += defaultFilterCache.end\n  if (!safe && autoEscape) {\n    filterStart += 'Sqrl.F.e('\n    filterEnd += ')'\n  }\n\n  return filterStart + initialString + filterEnd\n}\n\nfunction defineFilter (name, callback) {\n  filters[name] = callback\n}\n\nexport { filters as default, defineFilter }\n","import { regEx, setup, replaceParamHelpers } from './regexps'\nimport nativeHelpers from './nativeHelpers'\nimport { parseFiltered } from './filters'\nimport P from './partials'\n\nfunction Compile (str) {\n  var lastIndex = 0 // Because lastIndex can be complicated, and this way the minifier can minify more\n  var funcStr = \"var tR='';\" // This will be called with Function() and returned\n  var helperArray = [] // A list of all 'outstanding' helpers, or unclosed helpers\n  var helperNumber = -1\n  var helperAutoId = 0 // Squirrelly automatically generates an ID for helpers that don't have a custom ID\n  var helperContainsBlocks = {} // If a helper contains any blocks, helperContainsBlocks[helperID] will be set to true\n  var m\n\n  function addString (indx) {\n    if (lastIndex !== indx) {\n      funcStr +=\n        \"tR+='\" +\n        str\n          .slice(lastIndex, indx)\n          .replace(/\\\\/g, '\\\\\\\\')\n          .replace(/'/g, \"\\\\'\") +\n        \"';\"\n    }\n  }\n\n  setup()\n  while ((m = regEx.exec(str)) !== null) {\n    addString(m.index) // Add the string between the last tag (or start of file) and the current tag\n    lastIndex = m[0].length + m.index\n    if (m[1]) {\n      // It's a global ref. p4 = filters\n      funcStr += 'tR+=' + globalRef(m[1], m[4]) + ';'\n    } else if (m[3]) {\n      // It's a helper ref. p2 = id (with ':' after it) or path, p4 = filters\n      funcStr += 'tR+=' + helperRef(m[3], m[2], m[4]) + ';'\n    } else if (m[5]) {\n      // It's a helper oTag. p6 parameters, p7 id\n      var id = m[7]\n      if (id === '' || id === null) {\n        id = helperAutoId\n        helperAutoId++\n      }\n      var native = nativeHelpers.hasOwnProperty(m[5]) // true or false\n      helperNumber += 1\n      var params = m[6] || ''\n      params = replaceParamHelpers(params)\n      if (!native) {\n        params = '[' + params + ']'\n      }\n      var helperTag = {\n        name: m[5],\n        id: id,\n        params: params,\n        native: native\n      }\n      helperArray[helperNumber] = helperTag\n      if (native) {\n        funcStr += nativeHelpers[m[5]].helperStart(params, id)\n        lastIndex = regEx.lastIndex // the changeTags function sets lastIndex already\n      } else {\n        funcStr +=\n          'tR+=Sqrl.H.' +\n          m[5] +\n          '(' +\n          params +\n          ',function(hvals){var hvals' +\n          id +\n          \"=hvals;var tR='';\"\n      }\n    } else if (m[8]) {\n      // It's a helper cTag.\n      var mostRecentHelper = helperArray[helperNumber]\n      if (mostRecentHelper && mostRecentHelper.name === m[8]) {\n        helperNumber -= 1\n        if (mostRecentHelper.native === true) {\n          funcStr += nativeHelpers[mostRecentHelper.name].helperEnd(\n            mostRecentHelper.params,\n            mostRecentHelper.id\n          )\n        } else {\n          if (helperContainsBlocks[mostRecentHelper.id]) {\n            funcStr += 'return tR}});'\n          } else {\n            funcStr += 'return tR});'\n          }\n        }\n      } else {\n        console.error(\"Helper beginning & end don't match.\")\n      }\n    } else if (m[9]) {\n      // It's a helper block.\n      var parent = helperArray[helperNumber]\n      if (parent.native) {\n        var nativeH = nativeHelpers[parent.name]\n        if (nativeH.blocks && nativeH.blocks[m[9]]) {\n          funcStr += nativeH.blocks[m[9]](parent.id)\n          lastIndex = regEx.lastIndex // Some native helpers set regEx.lastIndex\n        } else {\n          console.warn(\n            \"Native helper '%s' doesn't accept that block.\",\n            parent.name\n          )\n        }\n      } else {\n        if (!helperContainsBlocks[parent.id]) {\n          funcStr +=\n            'return tR},{' +\n            m[9] +\n            ':function(hvals){var hvals' +\n            parent.id +\n            \"=hvals;var tR='';\"\n          helperContainsBlocks[parent.id] = true\n        } else {\n          funcStr +=\n            'return tR},' +\n            m[9] +\n            ':function(hvals){var hvals' +\n            parent.id +\n            \"=hvals;var tR='';\"\n        }\n      }\n    } else if (m[10]) {\n      // It's a self-closing helper\n      var innerParams = m[11] || ''\n      innerParams = replaceParamHelpers(innerParams)\n      if (m[10] === 'include') {\n        // This code literally gets the template string up to the include self-closing helper,\n        // adds the content of the partial, and adds the template string after the include self-closing helper\n        var preContent = str.slice(0, m.index)\n        var endContent = str.slice(m.index + m[0].length)\n        var partialParams = innerParams.replace(/'|\"/g, '') // So people can write {{include(mypartial)/}} or {{include('mypartial')/}}\n        var partialContent = P[partialParams]\n        str = preContent + partialContent + endContent\n        lastIndex = regEx.lastIndex = m.index\n      } else if (\n        nativeHelpers.hasOwnProperty(m[10]) &&\n        nativeHelpers[m[10]].hasOwnProperty('selfClosing')\n      ) {\n        funcStr += nativeHelpers[m[10]].selfClosing(innerParams)\n        lastIndex = regEx.lastIndex // changeTags sets regEx.lastIndex\n      } else {\n        funcStr += 'tR+=Sqrl.H.' + m[10] + '(' + innerParams + ');' // If it's not native, passing args to a non-native helper\n      }\n    }\n    /* eslint-disable no-inner-declarations */\n    function globalRef (refName, filters) {\n      return parseFiltered('options.' + refName, filters)\n    }\n\n    function helperRef (name, id, filters) {\n      var prefix\n      if (typeof id !== 'undefined') {\n        if (/(?:\\.\\.\\/)+/g.test(id)) {\n          // Test if the helper reference is prefixed with ../\n          prefix = helperArray[helperNumber - id.length / 3 - 1].id\n        } else {\n          prefix = id.slice(0, -1)\n        }\n        return parseFiltered('hvals' + prefix + '.' + name, filters)\n      } // Implied 'else'\n      return parseFiltered('hvals.' + name, filters)\n    }\n    /* eslint-enable no-inner-declarations */\n  }\n  addString(str.length) // Add the string from the last tag-close to the end of the file, if there is one\n  funcStr += 'return tR'\n  var func = new Function( //eslint-disable-line\n    'options',\n    'Sqrl',\n    funcStr.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')\n  )\n  return func\n}\n\nexport default Compile\n","import F from './filters'\nimport C from './compile'\nimport H from './helpers'\nimport n from './nativeHelpers'\nimport P from './partials'\n\nexport function defineFilter (name, callback) {\n  F[name] = callback\n}\n\nexport function defineHelper (name, callback) {\n  H[name] = callback\n}\n\nexport function defineNativeHelper (name, obj) {\n  n[name] = obj\n}\n\nexport function Render (template, options) {\n  // If the template parameter is a function, call that function with (options, squirrelly stuff)\n  // If it's a string, first compile the string and then call the function\n  if (typeof template === 'function') {\n    return template(options, { H: H, F: F, P: P })\n  } else if (typeof template === 'string') {\n    var res = load(options, template)(options, { H: H, F: F, P: P })\n    return res\n  }\n}\n\nexport function definePartial (name, str) {\n  P[name] = str\n}\n\nexport var cache = {}\n\nexport function load (options, str) {\n  var filePath = options.$file\n  var name = options.$name\n  var caching = options.$cache\n\n  if (filePath) {\n    // If $file is passed in\n    const fs = require('fs')\n    if (caching !== false) {\n      if (!cache.hasOwnProperty(filePath)) {\n        cache[filePath] = C(fs.readFileSync(filePath, 'utf8'))\n      }\n      return cache[filePath]\n    } else {\n      return C(fs.readFileSync(filePath, 'utf8'))\n    }\n  } else if (str) {\n    // If str is passed in\n    if (name && caching !== false) {\n      if (!cache.hasOwnProperty(name)) {\n        cache[name] = C(str)\n      }\n      return cache[name]\n    } else if (caching === true) {\n      if (!cache.hasOwnProperty(str)) {\n        cache[str] = C(str)\n      }\n      return cache[str]\n    } else {\n      return C(str)\n    }\n  } else if (name && caching !== false && cache.hasOwnProperty(name)) {\n    // If only name is passed in and it exists in cache\n    return cache[name]\n  } else {\n    // Neither $file nor str nor existing name is passed in\n    return 'No template'\n  }\n}\n\nexport function renderFile (filePath, options) {\n  options.$file = filePath\n  return load(options)(options, { H: H, F: F, P: P })\n}\n\nexport function __express (filePath, options, callback) {\n  return callback(null, renderFile(filePath, options))\n}\n"],"names":["helpers","Partials","initialRegEx","initialTags","s","e","paramHelperRefRegExp","regEx","tags","changeTags","firstTag","secondTag","newRegEx","source","slice","length","lastIndex","RegExp","replaceParamHelpers","params","replace","m","p1","p2","nativeHelpers","if","helperStart","param","helperEnd","blocks","else","each","id","foreach","log","selfClosing","indexOf","trim","js","escMap","&","<","\"","'","replaceChar","escapeRegEx","escapeRegExTest","filters","str","newStr","String","test","defaultFilters","defaultFilterCache","start","end","autoEscape","parseFiltered","initialString","filterString","filtersArray","safe","filterStart","filterEnd","split","i","Compile","funcStr","helperArray","helperNumber","helperAutoId","helperContainsBlocks","addString","indx","exec","index","globalRef","helperRef","native","hasOwnProperty","helperTag","name","mostRecentHelper","console","error","parent","nativeH","warn","innerParams","preContent","endContent","partialParams","partialContent","P","refName","Function","cache","load","options","filePath","$file","$name","caching","$cache","fs","require","C","readFileSync","renderFile","H","F","template","callback","bool","tagArray","obj","n","key","cacheDefaultFilters"],"mappings":"iMAAA,IAAIA,EAAU,GCAVC,EAAW,GCAJC,EAAe,kQACfC,EAAc,CACvBC,EAAG,KACHC,EAAG,MAIDC,EAAuB,uFAEhBC,EAAQL,EACRM,EAAOL,EAcX,SAASM,EAAYC,EAAUC,GACpC,IAAIC,EAAWF,EAAWH,EAAMM,OAAOC,MAAMN,EAAKJ,EAAEW,OAAQ,GAAKP,EAAKH,EAAEU,OAAS,IAAMJ,EAAY,OAC/FK,EAAYT,EAAMS,UACtBR,EAAO,CACLJ,EAAGM,EACHL,EAAGM,IAELJ,EAAQU,OAAOL,EAAU,MACnBI,UAAYA,EAGb,SAASE,EAAqBC,GAWnC,OAVAA,EAASA,EAAOC,QAAQd,EAAsB,SAAUe,EAAGC,EAAIC,GAC7D,YAAkB,IAAPA,EACFF,QAEW,IAAPC,IACTA,EAAK,IAEA,QAAUA,EAAK,IAAMC,KC1ClC,IAAIC,EAAgB,CAClBC,GAAI,CACFC,YAAa,SAAUC,GACrB,MAAO,MAAQA,EAAQ,MAEzBC,UAAW,WACT,MAAO,KAETC,OAAQ,CACNC,KAAM,WACJ,MAAO,YAIbC,KAAM,CACJL,YAAa,SAAUC,EAAOK,GAC5B,MAAO,iBAAmBL,EAAQ,yDAA2DK,EAAK,WAEpGJ,UAAW,SAAUD,GACnB,MAAO,qBAAuBA,EAAQ,oBAG1CM,QAAS,CACPP,YAAa,SAAUC,EAAOK,GAC5B,MAAO,kBAAoBL,EAAQ,SAAWA,EAAQ,0EAA4EK,EAAK,WAEzIJ,UAAW,SAAUD,GACnB,MAAO,qBAAuBA,EAAQ,wBAG1CO,IAAK,CACHC,YAAa,SAAUR,GACrB,MAAO,eAAiBA,EAAQ,OAGpCnB,KAAM,CACJ2B,YAAa,SAAUR,GAIrB,OADAlB,EAFekB,EAAMb,MAAM,EAAGa,EAAMS,QAAQ,MAAMC,OAClCV,EAAMb,MAAMa,EAAMS,QAAQ,KAAO,GAAGC,QAE7C,KAGXC,GAAI,CACFH,YAAa,SAAUR,GACrB,OAAOA,EAAQ,OC9CjBY,EAAS,CACXC,IAAK,QACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SAGP,SAASC,EAAaxC,GACpB,OAAOmC,EAAOnC,GAGhB,IAAIyC,EAAc,UACdC,EAAkB,SAEXC,EAAU,CACnB1C,EAAG,SAAU2C,GAEX,IAAIC,EAASC,OAAOF,GACpB,OAAIF,EAAgBK,KAAKF,GAChBA,EAAO7B,QAAQyB,EAAaD,GAE5BK,IAMFG,EAAiB,GAQjBC,EAAqB,CAE9BC,MAAO,GACPC,IAAK,IAgBA,IAAIC,GAAa,EAkBjB,SAASC,EAAeC,EAAeC,GAC5C,IAAIC,EACAC,GAAO,EACPC,EAAc,GACdC,EAAY,GAChB,GAAIJ,GAAiC,KAAjBA,EAAqB,CACvCC,EAAeD,EAAaK,MAAM,KAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAa7C,OAAQkD,IACvCL,EAAaK,GAAKL,EAAaK,GAAG5B,OACV,KAApBuB,EAAaK,KACO,SAApBL,EAAaK,IAMjBH,EAAc,UAAYF,EAAaK,GAAK,IAAMH,EAClDC,GAAa,KAJXF,GAAO,GAcb,OAPAC,GAAeT,EAAmBC,MAClCS,GAAaV,EAAmBE,KAC3BM,GAAQL,IACXM,GAAe,YACfC,GAAa,KAGRD,EAAcJ,EAAgBK,EC9FvC,SAASG,EAASlB,GAChB,IAMI3B,EANAL,EAAY,EACZmD,EAAU,aACVC,EAAc,GACdC,GAAgB,EAChBC,EAAe,EACfC,EAAuB,GAG3B,SAASC,EAAWC,GACdzD,IAAcyD,IAChBN,GACE,QACAnB,EACGlC,MAAME,EAAWyD,GACjBrD,QAAQ,MAAO,QACfA,QAAQ,KAAM,OACjB,MAKN,IHdAZ,EAAOL,GACPI,EAAQL,GACFc,UAAY,EGYe,QAAzBK,EAAId,EAAMmE,KAAK1B,KAAgB,CAGrC,GAFAwB,EAAUnD,EAAEsD,OACZ3D,EAAYK,EAAE,GAAGN,OAASM,EAAEsD,MACxBtD,EAAE,GAEJ8C,GAAW,OAASS,EAAUvD,EAAE,GAAIA,EAAE,IAAM,SACvC,GAAIA,EAAE,GAEX8C,GAAW,OAASU,EAAUxD,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAM,SAC7C,GAAIA,EAAE,GAAI,CAEf,IAAIW,EAAKX,EAAE,GACA,KAAPW,GAAoB,OAAPA,IACfA,EAAKsC,EACLA,KAEF,IAAIQ,EAAStD,EAAcuD,eAAe1D,EAAE,IAC5CgD,GAAgB,EAChB,IAAIlD,EAASE,EAAE,IAAM,GACrBF,EAASD,EAAoBC,GACxB2D,IACH3D,EAAS,IAAMA,EAAS,KAE1B,IAAI6D,EAAY,CACdC,KAAM5D,EAAE,GACRW,GAAIA,EACJb,OAAQA,EACR2D,OAAQA,GAEVV,EAAYC,GAAgBW,EACxBF,GACFX,GAAW3C,EAAcH,EAAE,IAAIK,YAAYP,EAAQa,GACnDhB,EAAYT,EAAMS,WAElBmD,GACE,cACA9C,EAAE,GACF,IACAF,EACA,6BACAa,EACA,yBAEC,GAAIX,EAAE,GAAI,CAEf,IAAI6D,EAAmBd,EAAYC,GAC/Ba,GAAoBA,EAAiBD,OAAS5D,EAAE,IAClDgD,GAAgB,GACgB,IAA5Ba,EAAiBJ,OACnBX,GAAW3C,EAAc0D,EAAiBD,MAAMrD,UAC9CsD,EAAiB/D,OACjB+D,EAAiBlD,IAGfuC,EAAqBW,EAAiBlD,IACxCmC,GAAW,gBAEXA,GAAW,gBAIfgB,QAAQC,MAAM,4CAEX,GAAI/D,EAAE,GAAI,CAEf,IAAIgE,EAASjB,EAAYC,GACzB,GAAIgB,EAAOP,OAAQ,CACjB,IAAIQ,EAAU9D,EAAc6D,EAAOJ,MAC/BK,EAAQzD,QAAUyD,EAAQzD,OAAOR,EAAE,KACrC8C,GAAWmB,EAAQzD,OAAOR,EAAE,IAAIgE,EAAOrD,IACvChB,EAAYT,EAAMS,WAElBmE,QAAQI,KACN,gDACAF,EAAOJ,WAINV,EAAqBc,EAAOrD,IAS/BmC,GACE,cACA9C,EAAE,GACF,6BACAgE,EAAOrD,GACP,qBAbFmC,GACE,eACA9C,EAAE,GACF,6BACAgE,EAAOrD,GACP,oBACFuC,EAAqBc,EAAOrD,KAAM,QAUjC,GAAIX,EAAE,IAAK,CAEhB,IAAImE,EAAcnE,EAAE,KAAO,GAE3B,GADAmE,EAActE,EAAoBsE,GACpB,YAAVnE,EAAE,IAAmB,CAGvB,IAAIoE,EAAazC,EAAIlC,MAAM,EAAGO,EAAEsD,OAC5Be,EAAa1C,EAAIlC,MAAMO,EAAEsD,MAAQtD,EAAE,GAAGN,QACtC4E,EAAgBH,EAAYpE,QAAQ,OAAQ,IAC5CwE,EAAiBC,EAAEF,GACvB3C,EAAMyC,EAAaG,EAAiBF,EACpC1E,EAAYT,EAAMS,UAAYK,EAAEsD,WAEhCnD,EAAcuD,eAAe1D,EAAE,MAC/BG,EAAcH,EAAE,KAAK0D,eAAe,gBAEpCZ,GAAW3C,EAAcH,EAAE,KAAKc,YAAYqD,GAC5CxE,EAAYT,EAAMS,WAElBmD,GAAW,cAAgB9C,EAAE,IAAM,IAAMmE,EAAc,KAI3D,SAASZ,EAAWkB,EAAS/C,GAC3B,OAAOU,EAAc,WAAaqC,EAAS/C,GAG7C,SAAS8B,EAAWI,EAAMjD,EAAIe,GAE5B,OAOSU,OAPS,IAAPzB,EAOY,SANjB,eAAemB,KAAKnB,GAEboC,EAAYC,EAAerC,EAAGjB,OAAS,EAAI,GAAGiB,GAE9CA,EAAGlB,MAAM,GAAI,IAEgB,IAAMmE,EAE3B,SAAWA,EAFsBlC,IAa1D,OAPAyB,EAAUxB,EAAIjC,QACdoD,GAAW,YACA,IAAI4B,SACb,UACA,OACA5B,EAAQ/C,QAAQ,MAAO,OAAOA,QAAQ,MAAO,QCzI1C,IAAI4E,EAAQ,GAEZ,SAASC,EAAMC,EAASlD,GAC7B,IAAImD,EAAWD,EAAQE,MACnBnB,EAAOiB,EAAQG,MACfC,EAAUJ,EAAQK,OAEtB,GAAIJ,EAAU,CAEZ,MAAMK,EAAKC,QAAQ,MACnB,OAAgB,IAAZH,GACGN,EAAMjB,eAAeoB,KACxBH,EAAMG,GAAYO,EAAEF,EAAGG,aAAaR,EAAU,UAEzCH,EAAMG,IAENO,EAAEF,EAAGG,aAAaR,EAAU,SAEhC,OAAInD,EAELiC,IAAoB,IAAZqB,GACLN,EAAMjB,eAAeE,KACxBe,EAAMf,GAAQyB,EAAE1D,IAEXgD,EAAMf,KACQ,IAAZqB,GACJN,EAAMjB,eAAe/B,KACxBgD,EAAMhD,GAAO0D,EAAE1D,IAEVgD,EAAMhD,IAEN0D,EAAE1D,GAEFiC,IAAoB,IAAZqB,GAAqBN,EAAMjB,eAAeE,GAEpDe,EAAMf,GAGN,cAIJ,SAAS2B,EAAYT,EAAUD,GAEpC,OADAA,EAAQE,MAAQD,EACTF,EAAKC,EAALD,CAAcC,EAAS,CAAEW,EAAGA,EAAGC,EAAGA,EAAGjB,EAAGA,2CA3D1C,SAAiBkB,EAAUb,GAGhC,MAAwB,mBAAba,EACFA,EAASb,EAAS,CAAEW,EAAGA,EAAGC,EAAGA,EAAGjB,EAAGA,IACb,iBAAbkB,EACNd,EAAKC,EAASa,EAAdd,CAAwBC,EAAS,CAAEW,EAAGA,EAAGC,EAAGA,EAAGjB,EAAGA,SADvD,eAyDF,SAAoBM,EAAUD,EAASc,GAC5C,OAAOA,EAAS,KAAMJ,EAAWT,EAAUD,oBFzBtC,SAAuBe,GAE5B,OADAzD,EAAayD,iBFvCR,SAAsBC,GAC3BzG,EAAWyG,EAAS,GAAIA,EAAS,IACjChH,EAAeK,EACfJ,EAAcK,kBIfT,SAAuByE,EAAM+B,GAClCF,EAAE7B,GAAQ+B,kBAGL,SAAuB/B,EAAM+B,GAClCH,EAAE5B,GAAQ+B,wBAGL,SAA6B/B,EAAMkC,GACxCC,EAAEnC,GAAQkC,mBAcL,SAAwBlC,EAAMjC,GACnC6C,EAAEZ,GAAQjC,+CFWL,SAA4BmE,GACjC,GAAY,UAARA,EACF/D,EAAiB,QAEjB,IAAK,IAAIiE,KAAOF,EACVA,EAAIpC,eAAesC,KACrBjE,EAAeiE,GAAOF,EAAIE,KAc3B,WAKL,IAAK,IAAIA,KAJThE,EAAqB,CACnBC,MAAO,GACPC,IAAK,IAESH,EACTA,EAAe2B,eAAesC,IAASjE,EAAeiE,KAC3DhE,EAAmBC,OAAS,UAAY+D,EAAM,IAC9ChE,EAAmBE,KAAO,KAlB5B+D"}