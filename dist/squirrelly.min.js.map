{"version":3,"file":"squirrelly.min.js","sources":["../src/helpers.js","../src/partials.js","../src/regexps.js","../src/nativeHelpers.js","../src/filters.js","../src/compile.js","../src/utils.js"],"sourcesContent":["var helpers = {\r\n// No helpers are included by default for the sake of size,\r\n// But there's an example of a helper below\r\n/*\r\n  Date: function (args, content, blocks, options) {\r\n    var today = new Date()\r\n    var dd = today.getDate()\r\n    var mm = today.getMonth() + 1 // January is 0!\r\n    var yyyy = today.getFullYear()\r\n    if (dd < 10) {\r\n      dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n      mm = '0' + mm\r\n    }\r\n    today = mm + '/' + dd + '/' + yyyy\r\n    return today\r\n  } */\r\n}\r\n\r\nexport default helpers\r\n","var Partials = {/*\r\n    partialName: \"partialString\"\r\n*/}\r\n\r\nexport default Partials\r\n","export var initialRegEx = /{{ *?(?:(?:(?:(?:([\\w$]+ *?(?:[^\\s\\w($][^\\n]*?)*?))|(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *))(?: *?(\\| *?[\\w$]+? *?)+?)?)|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?([\\w$]*))|(?:\\/ *?([\\w$]+))|(?:# *?([\\w$]+))|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?\\/)|(?:!--[^]+?--)) *?}}\\n?/g\r\nexport var initialTags = {\r\n  s: '{{',\r\n  e: '}}'\r\n}\r\n\r\n// The regExp below matches all helper references inside helper parameters\r\nvar paramHelperRefRegExp = /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[\\\\]@(?:[\\w$]*:)?[\\w$]+|@(?:([\\w$]*):)?([\\w$]+)/g\r\n\r\nexport var regEx = initialRegEx\r\nexport var tags = initialTags\r\n\r\nexport function setup () { // Resets the current tags to the default tags\r\n  tags = initialTags\r\n  regEx = initialRegEx\r\n  regEx.lastIndex = 0\r\n}\r\n\r\nexport function defaultTags (tagArray) { // Redefine the default tags of the regexp\r\n  changeTags(tagArray[0], tagArray[1])\r\n  initialRegEx = regEx\r\n  initialTags = tags\r\n}\r\n\r\nexport function changeTags (firstTag, secondTag) { // Update current tags\r\n  var newRegEx = firstTag + regEx.source.slice(tags.s.length, 0 - (tags.e.length + 3)) + secondTag + '\\\\n?'\r\n  var lastIndex = regEx.lastIndex\r\n  tags = {\r\n    s: firstTag,\r\n    e: secondTag\r\n  }\r\n  regEx = RegExp(newRegEx, 'g')\r\n  regEx.lastIndex = lastIndex\r\n}\r\n\r\nexport function replaceParamHelpers (params) {\r\n  params = params.replace(paramHelperRefRegExp, function (m, p1, p2) { // p1 scope, p2 string\r\n    if (typeof p2 === 'undefined') {\r\n      return m\r\n    } else {\r\n      if (typeof p1 === 'undefined') {\r\n        p1 = ''\r\n      }\r\n      return 'hvals' + p1 + '.' + p2\r\n    }\r\n  })\r\n  return params\r\n}\r\n\r\n// The whole regular expression can be hard to comprehend, so here it's broken down.\r\n// You can pass the string between \"START REGEXP\" and \"END REGEXP\" into a regular expression\r\n// That removes whitespace and comments, and outputs a working regular expression.\r\n\r\n/* START REGEXP\r\n{{ *? //the beginning\r\n(?: //or for each possible tag\r\n(?: //if a global or helper ref\r\n(?: //choosing global or helper ref\r\n(?:([\\w$]+ *?(?:[^\\s\\w($][^\\n]*?)*?)) //global reference\r\n|\r\n(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *) //helper reference\r\n)\r\n(?: *?(\\| *?[\\w$]+? *?)+?)? //filter\r\n) //end if a global or helper ref\r\n| //now if a helper oTag\r\n(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?([\\w$]*))\r\n| //now if a helper cTag\r\n(?:\\/ *?([\\w$]+))\r\n| //now if a helper block\r\n(?:# *?([\\w$]+))\r\n| //now for a self closing tag\r\n(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?\\/)\r\n| //now for comments\r\n(?:!--[^]+?--)\r\n) //end or for each possible tag\r\n *?}}\r\n\\n? //To replace a newline at the end of a line\r\n\r\nEND REGEXP */\r\n/*\r\np1: global ref main\r\np2: helper ref id (with ':' after it) or path\r\np3: helper ref main\r\np4: filters\r\np5: helper name\r\np6: helper parameters\r\np7: helper id\r\np8: helper cTag name\r\np9: helper block name\r\np10: self closing helper name\r\np11: self closing helper params\r\nHere's the RegExp I use to turn the expanded version between START REGEXP and END REGEXP to a working one: I replace [\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]| \\/\\/[\\w ']+\\n with nothing.\r\n*/\r\n","import { changeTags } from './regexps'\r\nvar nativeHelpers = {\r\n  if: {\r\n    helperStart: function (param) { // helperStart is called with (params, id) but id isn't needed\r\n      return 'if(' + param + '){'\r\n    },\r\n    helperEnd: function () {\r\n      return '}'\r\n    },\r\n    blocks: {\r\n      else: function () { // called with (id) but neither param is needed\r\n        return '}else{'\r\n      }\r\n    }\r\n  },\r\n  each: {\r\n    helperStart: function (param, id) { // helperStart is called with (params, id) but id isn't needed\r\n      return 'for(var i=0;i<' + param + \".length; i++){tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\r\n    },\r\n    helperEnd: function (param) {\r\n      return 'return tR})({this:' + param + '[i],index:i})};'\r\n    }\r\n  },\r\n  foreach: {\r\n    helperStart: function (param, id) {\r\n      return 'for(var key in ' + param + '){if(!' + param + \".hasOwnProperty(key)) continue;tR+=(function(hvals){var tR='';var hvals\" + id + '=hvals;'\r\n    },\r\n    helperEnd: function (param) {\r\n      return 'return tR})({this:' + param + '[key], key: key})};'\r\n    }\r\n  },\r\n  log: {\r\n    selfClosing: function (param) {\r\n      return 'console.log(' + param + ');'\r\n    }\r\n  },\r\n  tags: {\r\n    selfClosing: function (param) {\r\n      var firstTag = param.slice(0, param.indexOf(',')).trim()\r\n      var secondTag = param.slice(param.indexOf(',') + 1).trim()\r\n      changeTags(firstTag, secondTag)\r\n      return ''\r\n    }\r\n  },\r\n  js: { // The js self-closing helper allows you to inject JavaScript straight into your template function\r\n    selfClosing: function (param) {\r\n      return param + ';'\r\n    }\r\n  }\r\n}\r\n\r\nexport default nativeHelpers\r\n","var escMap = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '\"': '&quot;',\r\n  \"'\": '&#39;'\r\n}\r\n\r\nfunction replaceChar (s) {\r\n  return escMap[s]\r\n}\r\n\r\nvar escapeRegEx = /[&<\"']/g\r\nvar escapeRegExTest = /[&<\"']/\r\n\r\nexport var filters = {\r\n  e: function (str) {\r\n    // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\r\n    var newStr = String(str)\r\n    if (escapeRegExTest.test(newStr)) {\r\n      return newStr.replace(escapeRegEx, replaceChar)\r\n    } else {\r\n      return newStr\r\n    }\r\n  }\r\n}\r\n// Don't need a filter for unescape because that's just a flag telling Squirrelly not to escape\r\n\r\nexport var defaultFilters = {\r\n  /*\r\n  All strings are automatically passed through each of the default filters the user\r\n  Has set to true. This opens up a realm of possibilities.\r\n  */\r\n  // somefilter: false\r\n}\r\n\r\nexport var defaultFilterCache = {\r\n  // This is to prevent having to re-calculate default filters every time you return a filtered string\r\n  start: '',\r\n  end: ''\r\n}\r\n\r\nexport function setDefaultFilters (obj) {\r\n  if (obj === 'clear') { // If someone calls Sqrl.setDefaultFilters('clear') it clears all default filters\r\n    defaultFilters = {}\r\n  } else {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        defaultFilters[key] = obj[key]\r\n      }\r\n    }\r\n  }\r\n  cacheDefaultFilters()\r\n}\r\n\r\nexport var autoEscape = true\r\n\r\nexport function autoEscaping (bool) {\r\n  autoEscape = bool\r\n  return autoEscape\r\n}\r\n\r\nexport function cacheDefaultFilters () {\r\n  defaultFilterCache = {\r\n    start: '',\r\n    end: ''\r\n  }\r\n  for (var key in defaultFilters) {\r\n    if (!defaultFilters.hasOwnProperty(key) || !defaultFilters[key]) continue\r\n    defaultFilterCache.start += 'Sqrl.F.' + key + '('\r\n    defaultFilterCache.end += ')'\r\n  }\r\n}\r\nexport function parseFiltered (initialString, filterString) {\r\n  var filtersArray\r\n  var safe = false\r\n  var filterStart = ''\r\n  var filterEnd = ''\r\n  if (filterString && filterString !== '') {\r\n    filtersArray = filterString.split('|')\r\n    for (var i = 0; i < filtersArray.length; i++) {\r\n      filtersArray[i] = filtersArray[i].trim() // Removing the spaces just in case someone put | filter| or | filter | or something similar\r\n      if (filtersArray[i] === '') continue\r\n      if (filtersArray[i] === 'safe') {\r\n        // If 'safe' is one of the filters, set safe to true but don't add Sqrl.F.safe\r\n        // Essentially, 'safe' is a flag telling Squirrelly not to autoEscape\r\n        safe = true\r\n        continue\r\n      }\r\n      filterStart = 'Sqrl.F.' + filtersArray[i] + '(' + filterStart\r\n      filterEnd += ')'\r\n    }\r\n  }\r\n  filterStart += defaultFilterCache.start\r\n  filterEnd += defaultFilterCache.end\r\n  if (!safe && autoEscape) {\r\n    filterStart += 'Sqrl.F.e('\r\n    filterEnd += ')'\r\n  }\r\n\r\n  return filterStart + initialString + filterEnd\r\n}\r\n\r\nfunction defineFilter (name, callback) {\r\n  filters[name] = callback\r\n}\r\n\r\nexport { filters as default, defineFilter }\r\n","import {\r\n  regEx,\r\n  setup,\r\n  replaceParamHelpers\r\n} from './regexps'\r\nimport nativeHelpers from './nativeHelpers'\r\nimport {\r\n  parseFiltered\r\n} from './filters'\r\nimport P from './partials'\r\n\r\nfunction Compile (str) {\r\n  var lastIndex = 0 // Because lastIndex can be complicated, and this way the minifier can minify more\r\n  var funcStr = '' // This will be called with Function() and returned\r\n  var helperArray = [] // A list of all 'outstanding' helpers, or unclosed helpers\r\n  var helperNumber = -1\r\n  var helperAutoId = 0 // Squirrelly automatically generates an ID for helpers that don't have a custom ID\r\n  var helperContainsBlocks = {} // If a helper contains any blocks, helperContainsBlocks[helperID] will be set to true\r\n  var m\r\n  setup()\r\n  while ((m = regEx.exec(str)) !== null) {\r\n    if (funcStr === '') {\r\n      funcStr += \"var tR='\" + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n    } else if (lastIndex !== m.index) {\r\n      funcStr += \"tR+='\" + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n    }\r\n    lastIndex = m[0].length + m.index\r\n    if (m[1]) {\r\n      // It's a global ref. p4 = filters\r\n      funcStr += 'tR+=' + globalRef(m[1], m[4]) + ';'\r\n    } else if (m[3]) {\r\n      // It's a helper ref. p2 = id (with ':' after it) or path, p4 = filters\r\n      funcStr += 'tR+=' + helperRef(m[3], m[2], m[4]) + ';'\r\n    } else if (m[5]) {\r\n      // It's a helper oTag. p6 parameters, p7 id\r\n      var id = m[7]\r\n      if (id === '' || id === null) {\r\n        id = helperAutoId\r\n        helperAutoId++\r\n      }\r\n      var native = nativeHelpers.hasOwnProperty(m[5]) // true or false\r\n      helperNumber += 1\r\n      var params = m[6] || ''\r\n      params = replaceParamHelpers(params)\r\n      if (!native) {\r\n        params = '[' + params + ']'\r\n      }\r\n      var helperTag = {\r\n        name: m[5],\r\n        id: id,\r\n        params: params,\r\n        native: native\r\n      }\r\n      helperArray[helperNumber] = helperTag\r\n      if (native) {\r\n        funcStr += nativeHelpers[m[5]].helperStart(params, id)\r\n        lastIndex = regEx.lastIndex // the changeTags function sets lastIndex already\r\n      } else {\r\n        funcStr += 'tR+=Sqrl.H.' + m[5] + '(' + params + ',function(hvals){var hvals' + id + \"=hvals;var tR='';\"\r\n      }\r\n    } else if (m[8]) {\r\n      // It's a helper cTag.\r\n      var mostRecentHelper = helperArray[helperNumber]\r\n      if (mostRecentHelper && mostRecentHelper.name === m[8]) {\r\n        helperNumber -= 1\r\n        if (mostRecentHelper.native === true) {\r\n          funcStr += nativeHelpers[mostRecentHelper.name].helperEnd(mostRecentHelper.params, mostRecentHelper.id)\r\n        } else {\r\n          if (helperContainsBlocks[mostRecentHelper.id]) {\r\n            funcStr += 'return tR}});'\r\n          } else {\r\n            funcStr += 'return tR});'\r\n          }\r\n        }\r\n      } else {\r\n        console.error(\"Helper beginning & end don't match.\")\r\n      }\r\n    } else if (m[9]) {\r\n      // It's a helper block.\r\n      var parent = helperArray[helperNumber]\r\n      if (parent.native) {\r\n        var nativeH = nativeHelpers[parent.name]\r\n        if (nativeH.blocks && nativeH.blocks[m[9]]) {\r\n          funcStr += nativeH.blocks[m[9]](parent.id)\r\n          lastIndex = regEx.lastIndex // Some native helpers set regEx.lastIndex\r\n        } else {\r\n          console.warn(\"Native helper '%s' doesn't accept that block.\", parent.name)\r\n        }\r\n      } else {\r\n        if (!helperContainsBlocks[parent.id]) {\r\n          funcStr += 'return tR},{' + m[9] + ':function(hvals){var hvals' + parent.id + \"=hvals;var tR='';\"\r\n          helperContainsBlocks[parent.id] = true\r\n        } else {\r\n          funcStr += 'return tR},' + m[9] + ':function(hvals){var hvals' + parent.id + \"=hvals;var tR='';\"\r\n        }\r\n      }\r\n    } else if (m[10]) {\r\n      // It's a self-closing helper\r\n      var innerParams = m[11] || ''\r\n      innerParams = replaceParamHelpers(innerParams)\r\n      if (m[10] === 'include') {\r\n      // This code literally gets the template string up to the include self-closing helper,\r\n      // adds the content of the partial, and adds the template string after the include self-closing helper\r\n        var preContent = str.slice(0, m.index)\r\n        var endContent = str.slice(m.index + m[0].length)\r\n        var partialParams = innerParams.replace(/'|\"/g, '') // So people can write {{include(mypartial)/}} or {{include('mypartial')/}}\r\n        var partialContent = P[partialParams]\r\n        str = preContent + partialContent + endContent\r\n        lastIndex = regEx.lastIndex = m.index\r\n      } else if (nativeHelpers.hasOwnProperty(m[10]) && nativeHelpers[m[10]].hasOwnProperty('selfClosing')) {\r\n        funcStr += nativeHelpers[m[10]].selfClosing(innerParams)\r\n        lastIndex = regEx.lastIndex // changeTags sets regEx.lastIndex\r\n      } else {\r\n        funcStr += 'tR+=Sqrl.H.' + m[10] + '(' + innerParams + ');' // If it's not native, passing args to a non-native helper\r\n      }\r\n    }\r\n    /* eslint-disable no-inner-declarations */\r\n    function globalRef (refName, filters) {\r\n      return parseFiltered('options.' + refName, filters)\r\n    }\r\n\r\n    function helperRef (name, id, filters) {\r\n      var prefix\r\n      if (typeof id !== 'undefined') {\r\n        if (/(?:\\.\\.\\/)+/g.test(id)) { // Test if the helper reference is prefixed with ../\r\n          prefix = helperArray[helperNumber - (id.length / 3) - 1].id\r\n        } else {\r\n          prefix = id.slice(0, -1)\r\n        }\r\n        return parseFiltered('hvals' + prefix + '.' + name, filters)\r\n      } // Implied 'else'\r\n      return parseFiltered('hvals.' + name, filters)\r\n    }\r\n    /* eslint-enable no-inner-declarations */\r\n  }\r\n  if (funcStr === '') {\r\n    funcStr += \"var tR='\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + \"';\"\r\n  } else if (lastIndex !== str.length) {\r\n    funcStr += \"tR+='\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + \"';\"\r\n  }\r\n  funcStr += 'return tR'\r\n  var func = new Function('options', 'Sqrl', funcStr.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')) //eslint-disable-line\r\n  return func\r\n}\r\n\r\nexport default Compile\r\n","import F from './filters'\r\nimport C from './compile'\r\nimport H from './helpers'\r\nimport n from './nativeHelpers'\r\nimport P from './partials'\r\n\r\nexport function defineFilter (name, callback) {\r\n  F[name] = callback\r\n}\r\n\r\nexport function defineHelper (name, callback) {\r\n  H[name] = callback\r\n}\r\n\r\nexport function defineNativeHelper (name, obj) {\r\n  n[name] = obj\r\n}\r\n\r\nexport function Render (template, options) {\r\n  // If the template parameter is a function, call that function with (options, squirrelly stuff)\r\n  // If it's a string, first compile the string and then call the function\r\n  if (typeof template === 'function') {\r\n    return template(options, { H: H, F: F, P: P })\r\n  } else if (typeof template === 'string') {\r\n    var res = load(options, template)(options, { H: H, F: F, P: P })\r\n    return res\r\n  }\r\n}\r\n\r\nexport function definePartial (name, str) {\r\n  P[name] = str\r\n}\r\n\r\nexport var cache = {}\r\n\r\nexport function load (options, str) {\r\n  var filePath = options.$file\r\n  var name = options.$name\r\n  var caching = options.$cache\r\n  if (caching !== false) {\r\n    // If caching isn't disabled\r\n    if (filePath) {\r\n      // If the $file attribute is passed in\r\n      if (cache[filePath]) {\r\n        // If the template is cached\r\n        return cache[filePath] // Return template\r\n      } else {\r\n        // Otherwise, read file\r\n        var fs = require('fs')\r\n        var fileContent = fs.readFileSync(filePath, 'utf8')\r\n        cache[filePath] = C(fileContent) // Add the template to the cache\r\n        return cache[filePath] // Then return the cached template\r\n      }\r\n    } else if (name) {\r\n      // If the $name attribute is passed in\r\n      if (cache[name]) {\r\n        // If there's a cache for that name\r\n        return cache[name] // Return cached template\r\n      } else if (str) {\r\n        // Otherwise, as long as there's a string passed in\r\n        cache[name] = C(str) // Add the template to the cache\r\n        return cache[name] // Return cached template\r\n      }\r\n    } else if (str) {\r\n      // If the string is passed in\r\n      if (caching === true) {\r\n        if (cache[str]) {\r\n          // If it's cached\r\n          return cache[str]\r\n        } else {\r\n          cache[str] = C(str) // Add it to cache\r\n          return cache[str]\r\n        }\r\n      } else {\r\n        return C(str)\r\n      }\r\n    } else {\r\n      return 'Error'\r\n    }\r\n  } else {\r\n    // If caching is disabled\r\n    if (filePath) {\r\n      // If the $file attribute is passed in\r\n      var fs2 = require('fs')\r\n      return C(fs2.readFileSync(filePath, 'utf8')) // Then return the cached template\r\n    } else if (str) {\r\n      // If the string is passed in\r\n      return C(str)\r\n    } else {\r\n      throw Error('No template')\r\n    }\r\n  }\r\n}\r\n\r\nexport function renderFile (filePath, options) {\r\n  options.$file = filePath\r\n  return load(options)(options, { H: H, F: F, P: P })\r\n}\r\n\r\nexport function __express (filePath, options, callback) {\r\n  return callback(null, renderFile(filePath, options))\r\n}\r\n"],"names":["helpers","Partials","initialRegEx","initialTags","s","e","paramHelperRefRegExp","regEx","tags","changeTags","firstTag","secondTag","newRegEx","source","slice","length","lastIndex","RegExp","replaceParamHelpers","params","replace","m","p1","p2","nativeHelpers","if","helperStart","param","helperEnd","blocks","else","each","id","foreach","log","selfClosing","indexOf","trim","js","escMap","&","<","\"","'","replaceChar","escapeRegEx","escapeRegExTest","filters","str","newStr","String","test","defaultFilters","defaultFilterCache","start","end","autoEscape","parseFiltered","initialString","filterString","filtersArray","safe","filterStart","filterEnd","split","i","Compile","funcStr","helperArray","helperNumber","helperAutoId","helperContainsBlocks","exec","index","globalRef","helperRef","native","hasOwnProperty","helperTag","name","mostRecentHelper","console","error","parent","nativeH","warn","innerParams","preContent","endContent","partialParams","P","refName","Function","cache","load","options","filePath","$file","$name","caching","$cache","C","require","readFileSync","Error","fileContent","renderFile","H","F","template","callback","bool","tagArray","obj","n","key","cacheDefaultFilters"],"mappings":"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"}